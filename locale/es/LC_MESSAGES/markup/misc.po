# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2016, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: sphinx-doc-1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-16 05:36+0000\n"
"PO-Revision-Date: 2016-01-11 15:17+0000\n"
"Last-Translator: sphinx-users.jp <shimizukawa+sphinxjp@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/sphinx-doc/sphinx-doc-1_3/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../markup/misc.rst:4
msgid "Miscellaneous markup"
msgstr ""

#: ../../markup/misc.rst:9
msgid "File-wide metadata"
msgstr ""

#: ../../markup/misc.rst:11
msgid ""
"reST has the concept of \"field lists\"; these are a sequence of fields "
"marked up like this::"
msgstr ""

#: ../../markup/misc.rst:16
msgid ""
"A field list near the top of a file is parsed by docutils as the \"docinfo\""
" which is normally used to record the author, date of publication and other "
"metadata.  *In Sphinx*, a field list preceding any other markup is moved "
"from the docinfo to the Sphinx environment as document metadata and is not "
"displayed in the output; a field list appearing after the document title "
"will be part of the docinfo as normal and will be displayed in the output."
msgstr ""

#: ../../markup/misc.rst:23
msgid "At the moment, these metadata fields are recognized:"
msgstr ""

#: ../../markup/misc.rst:28
msgid "``tocdepth``"
msgstr ""

#: ../../markup/misc.rst:26
msgid "The maximum depth for a table of contents of this file."
msgstr ""

#: ../../markup/misc.rst:32
msgid "``nocomments``"
msgstr ""

#: ../../markup/misc.rst:31
msgid ""
"If set, the web application won't display a comment form for a page "
"generated from this source file."
msgstr ""

#: ../../markup/misc.rst:39
msgid "``orphan``"
msgstr ""

#: ../../markup/misc.rst:35
msgid ""
"If set, warnings about this file not being included in any toctree will be "
"suppressed."
msgstr ""

#: ../../markup/misc.rst:42
msgid "Meta-information markup"
msgstr ""

#: ../../markup/misc.rst:46
msgid ""
"Identifies the author of the current section.  The argument should include "
"the author's name such that it can be used for presentation and email "
"address.  The domain name portion of the address should be lower case. "
"Example::"
msgstr ""

#: ../../markup/misc.rst:53
msgid ""
"By default, this markup isn't reflected in the output in any way (it helps "
"keep track of contributions), but you can set the configuration value "
":confval:`show_authors` to ``True`` to make them produce a paragraph in the "
"output."
msgstr ""

#: ../../markup/misc.rst:61
msgid ""
"The :rst:dir:`codeauthor` directive, which can appear multiple times, names "
"the authors of the described code, just like :rst:dir:`sectionauthor` names "
"the author(s) of a piece of documentation.  It too only produces output if "
"the :confval:`show_authors` configuration value is ``True``."
msgstr ""

#: ../../markup/misc.rst:68
msgid "Index-generating markup"
msgstr ""

#: ../../markup/misc.rst:70
msgid ""
"Sphinx automatically creates index entries from all object descriptions "
"(like functions, classes or attributes) like discussed in :ref:`domains`."
msgstr ""

#: ../../markup/misc.rst:73
msgid ""
"However, there is also explicit markup available, to make the index more "
"comprehensive and enable index entries in documents where information is not"
" mainly contained in information units, such as the language reference."
msgstr ""

#: ../../markup/misc.rst:79
msgid ""
"This directive contains one or more index entries.  Each entry consists of a"
" type and a value, separated by a colon."
msgstr ""

#: ../../markup/misc.rst:82
msgid "For example::"
msgstr ""

#: ../../markup/misc.rst:95
msgid ""
"This directive contains five entries, which will be converted to entries in "
"the generated index which link to the exact location of the index statement "
"(or, in case of offline media, the corresponding page number)."
msgstr ""

#: ../../markup/misc.rst:99
msgid ""
"Since index directives generate cross-reference targets at their location in"
" the source, it makes sense to put them *before* the thing they refer to -- "
"e.g. a heading, as in the example above."
msgstr ""

#: ../../markup/misc.rst:103
msgid "The possible entry types are:"
msgstr ""

#: ../../markup/misc.rst:107
msgid "single"
msgstr ""

#: ../../markup/misc.rst:106
msgid ""
"Creates a single index entry.  Can be made a subentry by separating the "
"subentry text with a semicolon (this notation is also used below to describe"
" what entries are created)."
msgstr ""

#: ../../markup/misc.rst:110
msgid "pair"
msgstr ""

#: ../../markup/misc.rst:110
msgid ""
"``pair: loop; statement`` is a shortcut that creates two index entries, "
"namely ``loop; statement`` and ``statement; loop``."
msgstr ""

#: ../../markup/misc.rst:114
msgid "triple"
msgstr ""

#: ../../markup/misc.rst:113
msgid ""
"Likewise, ``triple: module; search; path`` is a shortcut that creates three "
"index entries, which are ``module; search path``, ``search; path, module`` "
"and ``path; module search``."
msgstr ""

#: ../../markup/misc.rst:117
msgid "see"
msgstr ""

#: ../../markup/misc.rst:117
msgid ""
"``see: entry; other`` creates an index entry that refers from ``entry`` to "
"``other``."
msgstr ""

#: ../../markup/misc.rst:119
msgid "seealso"
msgstr ""

#: ../../markup/misc.rst:120
msgid "Like ``see``, but inserts \"see also\" instead of \"see\"."
msgstr ""

#: ../../markup/misc.rst:124
msgid "module, keyword, operator, object, exception, statement, builtin"
msgstr ""

#: ../../markup/misc.rst:122
msgid ""
"These all create two index entries.  For example, ``module: hashlib`` "
"creates the entries ``module; hashlib`` and ``hashlib; module``.  (These are"
" Python-specific and therefore deprecated.)"
msgstr ""

#: ../../markup/misc.rst:126
msgid ""
"You can mark up \"main\" index entries by prefixing them with an exclamation"
" mark.  The references to \"main\" entries are emphasized in the generated "
"index.  For example, if two pages contain ::"
msgstr ""

#: ../../markup/misc.rst:132
msgid "and one page contains ::"
msgstr ""

#: ../../markup/misc.rst:136
msgid ""
"then the backlink to the latter page is emphasized among the three "
"backlinks."
msgstr ""

#: ../../markup/misc.rst:138
msgid ""
"For index directives containing only \"single\" entries, there is a "
"shorthand notation::"
msgstr ""

#: ../../markup/misc.rst:143
msgid "This creates four index entries."
msgstr ""

#: ../../markup/misc.rst:145
msgid "Added ``see`` and ``seealso`` types, as well as marking main entries."
msgstr ""

#: ../../markup/misc.rst:150
msgid ""
"While the :rst:dir:`index` directive is a block-level markup and links to "
"the beginning of the next paragraph, there is also a corresponding role that"
" sets the link target directly where it is used."
msgstr ""

#: ../../markup/misc.rst:154
msgid ""
"The content of the role can be a simple phrase, which is then kept in the "
"text and used as an index entry.  It can also be a combination of text and "
"index entry, styled like with explicit targets of cross-references.  In that"
" case, the \"target\" part can be a full entry as described for the "
"directive above.  For example::"
msgstr ""

#: ../../markup/misc.rst:169
msgid "Including content based on tags"
msgstr ""

#: ../../markup/misc.rst:173
msgid ""
"Include the content of the directive only if the *expression* is true.  The "
"expression should consist of tags, like this::"
msgstr ""

#: ../../markup/misc.rst:178
msgid ""
"Undefined tags are false, defined tags (via the ``-t`` command-line option "
"or within :file:`conf.py`, see :ref:`here <conf-tags>`) are true.  Boolean "
"expressions, also using parentheses (like ``html and (latex or draft)``) are"
" supported."
msgstr ""

#: ../../markup/misc.rst:183
msgid ""
"The *format* and the *name* of the current builder (``html``, ``latex`` or "
"``text``) are always set as a tag [#]_.  To make the distinction between "
"format and name explicit, they are also added with the prefix ``format_`` "
"and ``builder_``, e.g. the epub builder defines the tags  ``html``, "
"``epub``, ``format_html`` and ``builder_epub``."
msgstr ""

#: ../../markup/misc.rst:189
msgid ""
"These standard tags are set *after* the configuration file is read, so they "
"are not available there."
msgstr ""

#: ../../markup/misc.rst:192
msgid ""
"All tags must follow the standard Python identifier syntax as set out in the"
" `Identifiers and keywords "
"<https://docs.python.org/reference/lexical_analysis.html#identifiers>`_ "
"documentation.  That is, a tag expression may only consist of tags that "
"conform to the syntax of Python variables.  In ASCII, this consists of the "
"uppercase and lowercase letters ``A`` through ``Z``, the underscore ``_`` "
"and, except for the first character, the digits ``0`` through ``9``."
msgstr ""

#: ../../markup/misc.rst:201
msgid "Added the name of the builder and the prefixes."
msgstr ""

#: ../../markup/misc.rst:206
msgid "Tables"
msgstr ""

#: ../../markup/misc.rst:208
msgid ""
"Use :ref:`standard reStructuredText tables <rst-tables>`.  They work fine in"
" HTML output, however there are some gotchas when using tables in LaTeX: the"
" column width is hard to determine correctly automatically.  For this "
"reason, the following directive exists:"
msgstr ""

#: ../../markup/misc.rst:215
msgid ""
"This directive gives a \"column spec\" for the next table occurring in the "
"source file.  The spec is the second argument to the LaTeX ``tabulary`` "
"package's environment (which Sphinx uses to translate tables).  It can have "
"values like ::"
msgstr ""

#: ../../markup/misc.rst:222
msgid ""
"which means three left-adjusted, nonbreaking columns.  For columns with "
"longer text that should automatically be broken, use either the standard "
"``p{width}`` construct, or tabulary's automatic specifiers:"
msgstr ""

#: ../../markup/misc.rst:227
msgid "``L``"
msgstr ""

#: ../../markup/misc.rst:227
msgid "flush left column with automatic width"
msgstr ""

#: ../../markup/misc.rst:229
msgid "``R``"
msgstr ""

#: ../../markup/misc.rst:229
msgid "flush right column with automatic width"
msgstr ""

#: ../../markup/misc.rst:231
msgid "``C``"
msgstr ""

#: ../../markup/misc.rst:231
msgid "centered column with automatic width"
msgstr ""

#: ../../markup/misc.rst:233
msgid "``J``"
msgstr ""

#: ../../markup/misc.rst:233
msgid "justified column with automatic width"
msgstr ""

#: ../../markup/misc.rst:236
msgid ""
"The automatic width is determined by rendering the content in the table, and"
" scaling them according to their share of the total width."
msgstr ""

#: ../../markup/misc.rst:239
msgid "By default, Sphinx uses a table layout with ``L`` for every column."
msgstr ""

#: ../../markup/misc.rst:245
msgid ""
"Tables that contain list-like elements such as object descriptions, "
"blockquotes or any kind of lists cannot be set out of the box with "
"``tabulary``.  They are therefore set with the standard LaTeX ``tabular`` "
"environment if you don't give a ``tabularcolumns`` directive.  If you do, "
"the table will be set with ``tabulary``, but you must use the ``p{width}`` "
"construct for the columns that contain these elements."
msgstr ""

#: ../../markup/misc.rst:252
msgid ""
"Literal blocks do not work with ``tabulary`` at all, so tables containing a "
"literal block are always set with ``tabular``.  Also, the verbatim "
"environment used for literal blocks only works in ``p{width}`` columns, "
"which means that by default, Sphinx generates such column specs for such "
"tables. Use the :rst:dir:`tabularcolumns` directive to get finer control "
"over such tables."
msgstr ""

#: ../../markup/misc.rst:260
msgid "Footnotes"
msgstr "Notas a pie de página"

#: ../../markup/misc.rst:261
msgid ""
"For most builders name and format are the same. At the moment only builders "
"derived from the html builder distinguish between the builder format and the"
" builder name."
msgstr ""

#: ../../markup/misc.rst:265
msgid ""
"Note that the current builder tag is not available in ``conf.py``, it is "
"only available after the builder is initialized."
msgstr ""
