# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2014, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-16 17:31+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\sphinx\doc\extdev\appapi.rst:4
# 1ab80e0ac4f546ba9e0a0f84c11e21aa
msgid "Application API"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:10
# da4df63b5a1d4bbcb7e1bd77a69b025c
msgid "Each Sphinx extension is a Python module with at least a :func:`setup` function. This function is called at initialization time with one argument, the application object representing the Sphinx process."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:16
# fc0b76ee28e14e96a1a784dded57b88a
msgid "This application object has the public API described in the following."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:19
# 714121e5918d4e529d34e7f4069ecf6b
msgid "Extension setup"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:21
# 94c60d51e49a42918a406ec26086e7ec
msgid "These methods are usually called in an extension's ``setup()`` function."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:23
# 1f839dc2580a4c29b7cc56f8f72dbedd
msgid "Examples of using the Sphinx extension API can be seen in the :mod:`sphinx.ext` package."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:28
# a5a4c792bcfe4983b3e5ed869e9baf88
msgid "Load the extension given by the module *name*.  Use this if your extension needs the features provided by another extension."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:33
# c2b52ef923124054a8a8b25e618e4ef3
msgid "Register a new builder.  *builder* must be a class that inherits from :class:`~sphinx.builders.Builder`."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:38
# 79dec5b508db4e0a9d431b2cd9bce0bb
msgid "Register a configuration value.  This is necessary for Sphinx to recognize new values and set default values accordingly.  The *name* should be prefixed with the extension name, to avoid clashes.  The *default* value can be any Python object.  The string value *rebuild* must be one of those values:"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:43
# d7d003a4dbf947938a1d01de2ad7a6b3
msgid "``'env'`` if a change in the setting only takes effect when a document is parsed -- this means that the whole environment must be rebuilt."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:45
# 21068d4c3f0843b186100d573271aec7
msgid "``'html'`` if a change in the setting needs a full rebuild of HTML documents."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:47
# e588a7a8f72d4ad7af9984e67ce06140
msgid "``''`` if a change in the setting will not need any special rebuild."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:49
# 48376b75756b4f328114dd7e70410bf2
msgid "If the *default* value is a callable, it will be called with the config object as its argument in order to get the default value.  This can be used to implement config values whose default depends on other values."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:54
# 958ba36b0dbb4d68af396261e33236cc
msgid "Changed *rebuild* from a simple boolean (equivalent to ``''`` or ``'env'``) to a string.  However, booleans are still accepted and converted internally."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:61
# eadde73455b247989c9b50956f97bd83
msgid "Make the given *domain* (which must be a class; more precisely, a subclass of :class:`~sphinx.domains.Domain`) known to Sphinx."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:68
# 7365a213e80448249bd956211c15d02c
msgid "Make the given *domain* class known to Sphinx, assuming that there is already a domain with its ``.name``.  The new domain must be a subclass of the existing one."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:76
# 29bb1c304b514534ae2481f9862a7ecc
msgid "Add a custom *index* class to the domain named *domain*.  *index* must be a subclass of :class:`~sphinx.domains.Index`."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:83
# 874bb6f90a274c7ea3fc49f43ca78484
msgid "Register an event called *name*.  This is needed to be able to emit it."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:87
# 577aeeef228d4185b5fd998d1b51b63e
msgid "Register a Docutils node class.  This is necessary for Docutils internals. It may also be used in the future to validate nodes in the parsed documents."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:90
# 256938794deb49f5b22d304f192abdf0
msgid "Node visitor functions for the Sphinx HTML, LaTeX, text and manpage writers can be given as keyword arguments: the keyword must be one or more of ``'html'``, ``'latex'``, ``'text'``, ``'man'``, ``'texinfo'``, the value a 2-tuple of ``(visit, depart)`` methods.  ``depart`` can be ``None`` if the ``visit`` function raises :exc:`docutils.nodes.SkipNode`.  Example:"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:107
# 5aaa55a868f543168bde67e22d0523da
msgid "Obviously, translators for which you don't specify visitor methods will choke on the node when encountered in a document to translate."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:110
# 374e97cdde8f427d8de06f77274439ee
msgid "Added the support for keyword arguments giving visit functions."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:116
# 09a1826e6ffa4508b26500f4ada0d03e
msgid "Register a Docutils directive.  *name* must be the prospective directive name.  There are two possible ways to write a directive:"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:119
# 8c2ec1dd7c08436ba63c29aaac159caf
msgid "In the docutils 0.4 style, *obj* is the directive function.  *content*, *arguments* and *options* are set as attributes on the function and determine whether the directive has content, arguments and options, respectively.  **This style is deprecated.**"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:124
# 346feb85c6804b819da3d63c75f3643b
msgid "In the docutils 0.5 style, *directiveclass* is the directive class.  It must already have attributes named *has_content*, *required_arguments*, *optional_arguments*, *final_argument_whitespace* and *option_spec* that correspond to the options for the function way.  See `the Docutils docs <http://docutils.sourceforge.net/docs/howto/rst-directives.html>`_ for details."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:131
# 82645f8ba59846499bc4c9c35f740be1
msgid "The directive class must inherit from the class ``docutils.parsers.rst.Directive``."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:134
# ca0e1f13b59f45e0969cad6c919b5d2f
msgid "For example, the (already existing) :rst:dir:`literalinclude` directive would be added like this:"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:146
# db00740ead3d4f1181d31335f8091122
msgid "Docutils 0.5-style directive classes are now supported."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:152
# 28aed4854f7e45df9fee5750eeb233fd
msgid "Like :meth:`add_directive`, but the directive is added to the domain named *domain*."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:159
# 40d4c56c625a42cfa9c4025e9e3ac472
msgid "Register a Docutils role.  *name* must be the role name that occurs in the source, *role* the role function (see the `Docutils documentation <http://docutils.sourceforge.net/docs/howto/rst-roles.html>`_ on details)."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:165
# 581b7b4873a64d09b14f6a38b5a98646
msgid "Like :meth:`add_role`, but the role is added to the domain named *domain*."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:171
# 512bc8acbb1d48a18277569aba58b6ed
msgid "Register a Docutils role that does nothing but wrap its contents in the node given by *nodeclass*."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:179
# 534868da2b25479fa78558dd68d84089
msgid "This method is a very convenient way to add a new :term:`object` type that can be cross-referenced.  It will do this:"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:182
# e3c1d93c6f914a41ab39334b61f5a322
msgid "Create a new directive (called *directivename*) for documenting an object. It will automatically add index entries if *indextemplate* is nonempty; if given, it must contain exactly one instance of ``%s``.  See the example below for how the template will be interpreted."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:186
# 1e28ae2011a04ce8a700fa4bca623864
msgid "Create a new role (called *rolename*) to cross-reference to these object descriptions."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:188
# 6ccdf6b5d15241ef9b53654e2b2d73ee
msgid "If you provide *parse_node*, it must be a function that takes a string and a docutils node, and it must populate the node with children parsed from the string.  It must then return the name of the item to be used in cross-referencing and index entries.  See the :file:`conf.py` file in the source for this documentation for an example."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:193
# 86ad8eb8a6e04bd5a5680f47fc33c626
msgid "The *objname* (if not given, will default to *directivename*) names the type of object.  It is used when listing objects, e.g. in search results."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:196
# c71ed11f80a44a3f80f8f33280b190b6
msgid "For example, if you have this call in a custom Sphinx extension::"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:200
# b0b74cc16d424925869379def7796b90
msgid "you can use this markup in your documents::"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:210
# b8473135373e46cc979fa76a94418922
msgid "For the directive, an index entry will be generated as if you had prepended ::"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:214
# 4a91303a99544a25a8a460d21cdc0885
msgid "The reference node will be of class ``literal`` (so it will be rendered in a proportional font, as appropriate for code) unless you give the *ref_nodeclass* argument, which must be a docutils node class (most useful are ``docutils.nodes.emphasis`` or ``docutils.nodes.strong`` -- you can also use ``docutils.nodes.generated`` if you want no further text decoration)."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:220
# 6402839299094c0aa17394344479a6dc
msgid "For the role content, you have the same syntactical possibilities as for standard Sphinx roles (see :ref:`xref-syntax`)."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:223
# 4679cda337b24808b7381fe04ebfa4d5
msgid "This method is also available under the deprecated alias ``add_description_unit``."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:228
# e52d16a716024c25a47cfd6d66fc2877
msgid "This method is very similar to :meth:`add_object_type` except that the directive it generates must be empty, and will produce no output."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:231
# afdc670b7b5c48e1a705d81d46ff6fde
msgid "That means that you can add semantic targets to your sources, and refer to them using custom roles instead of generic ones (like :rst:role:`ref`).  Example call::"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:237
# 6b70a88a9fc4405ba47f1cb0e6f1cd62
msgid "Example usage::"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:248
# 8754d0a989d04a07ac18ce60122636ae
msgid "(Of course, the element following the ``topic`` directive needn't be a section.)"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:253
# 9bed9dd0f1e24f79ad1e96b0ef2b9ed5
msgid "Add the standard docutils :class:`Transform` subclass *transform* to the list of transforms that are applied after Sphinx parses a reST document."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:258
# 7e078e02ef6a4fab8990bea22bac53f3
msgid "Add *filename* to the list of JavaScript files that the default HTML template will include.  The filename must be relative to the HTML static path, see :confval:`the docs for the config value <html_static_path>`.  A full URI with scheme, like ``http://example.org/foo.js``, is also supported."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:267
# 593a61fb087f42bb9f936c44e6a4c5fc
msgid "Add *filename* to the list of CSS files that the default HTML template will include.  Like for :meth:`add_javascript`, the filename must be relative to the HTML static path, or a full URI with scheme."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:275
# b0eda94f0f1b4afea1b4b374b0182403
msgid "Use *lexer*, which must be an instance of a Pygments lexer class, to highlight code blocks with the given language *alias*."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:282
# c0fab79fbefc404ca5bf81d242cce619
msgid "Add *cls* as a new documenter class for the :mod:`sphinx.ext.autodoc` extension.  It must be a subclass of :class:`sphinx.ext.autodoc.Documenter`. This allows to auto-document new types of objects.  See the source of the autodoc module for examples on how to subclass :class:`Documenter`."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:293
# 91580f8f9ed64076ba6b6680a367f8d8
msgid "Add *getter*, which must be a function with an interface compatible to the :func:`getattr` builtin, as the autodoc attribute getter for objects that are instances of *type*.  All cases where autodoc needs to get an attribute of a type are then handled by this function instead of :func:`getattr`."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:302
# 02cf065f4cf34b388b2b55d6ae7d46cb
msgid "Add *cls*, which must be a subclass of :class:`sphinx.search.SearchLanguage`, as a support language for building the HTML full-text search index.  The class must have a *lang* attribute that indicates the language it should be used for.  See :confval:`html_search_language`."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:311
# c30cc4821df343308ab81f2137289f07
msgid "Compare *version* (which must be a ``major.minor`` version string, e.g. ``'1.1'``) with the version of the running Sphinx, and abort the build when it is too old."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:319
# 0fbe4541a95f4ba19d46a098b8931065
msgid "Register *callback* to be called when *event* is emitted.  For details on available core events and the arguments of callback functions, please see :ref:`events`."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:323
# 091279c12f58498e95134dfe6bdcb23e
msgid "The method returns a \"listener ID\" that can be used as an argument to :meth:`disconnect`."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:328
# 5748eecdcafa45aaa2b70d2d5967b7bb
msgid "Unregister callback *listener_id*."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:333
# 7a7b66625d0246358373f858b6cc3ebf
msgid "All these methods raise this exception if something went wrong with the extension API."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:338
# 2432502d29fe412d910d6f1634547913
msgid "Emitting events"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:342
# a25258959a694ee88d1fc5fa4d4a7650
msgid "Emit *event* and pass *arguments* to the callback functions.  Return the return values of all callbacks as a list.  Do not emit core Sphinx events in extensions!"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:348
# 95991061811a4efe8ab80fc837e26d87
msgid "Emit *event* and pass *arguments* to the callback functions.  Return the result of the first callback that doesn't return ``None``."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:355
# 750bbb78944541eea6742a70c9ef27c9
msgid "Producing messages / logging"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:357
# 3205653a2cde452ba740a4b9146e7fca
msgid "The application object also provides support for emitting leveled messages."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:361
# 52d2806c80ad4e4f8698707de17ebff7
msgid "There is no \"error\" call: in Sphinx, errors are defined as things that stop the build; just raise an exception (:exc:`sphinx.errors.SphinxError` or a custom subclass) to do that."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.warn:1
# 4a42b007e1cc4553aec4bc7125f2bb7e
msgid "Emit a warning."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.warn:3
# f7237dd4c78e4ef986236ef165bf7f98
msgid "If *location* is given, it should either be a tuple of (docname, lineno) or a string describing the location of the warning as well as possible."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.warn:6
# 2edb6e998ac9495ab4ae025d61f357c6
msgid "*prefix* usually should not be changed."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.warn:10
# f72b37c2143842cc9031c68fe9db7d3b
msgid "For warnings emitted during parsing, you should use :meth:`.BuildEnvironment.warn` since that will collect all warnings during parsing for later output."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.info:1
# 95f1cc62890e40389d3a8d7123bfe5e2
msgid "Emit an informational message."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.info:3
# 43f7acff76614d14b1038cb00ad08699
msgid "If *nonl* is true, don't emit a newline at the end (which implies that more info output will follow soon.)"
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.verbose:1
# cc329cdbb2e84f0b9afd80b61aebc3ce
msgid "Emit a verbose informational message."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.verbose:3
# 18ea876a5723420eb7f795ea43e5efd1
msgid "The message will only be emitted for verbosity levels >= 1 (i.e. at least one ``-v`` option was given)."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.verbose:6
#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.debug:6
#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.debug2:6
# c3dace5e326a4b798170674f0acbe3a1
# 3002abf9ed604fe38a630dd80d22997e
# 1a0cff1277e94fc98794f226a3b7509e
msgid "The message can contain %-style interpolation placeholders, which is formatted with either the ``*args`` or ``**kwargs`` when output."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.debug:1
# 805193f4052a4bedb459d8e033358289
msgid "Emit a debug-level informational message."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.debug:3
# 7307aade45d84e3c8646afa148b37a74
msgid "The message will only be emitted for verbosity levels >= 2 (i.e. at least two ``-v`` options were given)."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.debug2:1
# 84d4f7c758604c5081f9009e85ceb02d
msgid "Emit a lowlevel debug-level informational message."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.Sphinx.debug2:3
# be21b96a44b74529bfe068ae3f41952e
msgid "The message will only be emitted for verbosity level 3 (i.e. three ``-v`` options were given)."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:379
# 38f52cd85c5f4fdf972d3ad2d4a238e4
msgid "Sphinx core events"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:381
# e53e14357c8447c995e50974de265b2b
msgid "These events are known to the core.  The arguments shown are given to the registered event handlers.  Use :meth:`.connect` in an extension's ``setup`` function (note that ``conf.py`` can also have a ``setup`` function) to connect handlers to the events.  Example:"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:397
# d115a2329d0c48c4949f0c806d2c6ad8
msgid "Emitted when the builder object has been created.  It is available as ``app.builder``."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:402
# 0bd3bcb6b32c4809832b4e94bb3ddd03
msgid "Emitted when the environment determines which source files have changed and should be re-read.  *added*, *changed* and *removed* are sets of docnames that the environment has determined.  You can return a list of docnames to re-read in addition to these."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:411
# 606d9cc52a7f4df18698e6c86ddb0f08
msgid "Emitted when all traces of a source file should be cleaned from the environment, that is, if the source file is removed or before it is freshly read.  This is for extensions that keep their own caches in attributes of the environment."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:416
# e689ce3eddc5436f96efb8baea2d8aed
msgid "For example, there is a cache of all modules on the environment.  When a source file has been changed, the cache's entries for the file are cleared, since the module declarations could have been removed from the file."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:424
# 18abcf7284514e35ac5e0cbd6fef77ad
msgid "Emitted when a source file has been read.  The *source* argument is a list whose single element is the contents of the source file.  You can process the contents and replace this item to implement source-level transformations."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:428
# aab65d95f94d481aad22700844956cd0
msgid "For example, if you want to use ``$`` signs to delimit inline math, like in LaTeX, you can use a regular expression to replace ``$...$`` by ``:math:`...```."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:436
# d5c2a401259c4f518268890c7b52aeec
msgid "Emitted when a doctree has been parsed and read by the environment, and is about to be pickled.  The *doctree* can be modified in-place."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:441
# c0d0ca5d61c048428dac6f7a5c32ca6c
msgid "Emitted when a cross-reference to a Python module or object cannot be resolved.  If the event handler can resolve the reference, it should return a new docutils node to be inserted in the document tree in place of the node *node*.  Usually this node is a :class:`reference` node containing *contnode* as a child."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:447
# 38400d20214246c4ad50729521903d8f
msgid "The build environment (``app.builder.env``)."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:448
# e1f423c86ce14957a532e62f4db85bd6
msgid "The :class:`pending_xref` node to be resolved.  Its attributes ``reftype``, ``reftarget``, ``modname`` and ``classname`` attributes determine the type and target of the reference."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:451
# 4ee48ac964e24b5b94e7850855b3c8f4
msgid "The node that carries the text and formatting inside the future reference and should be a child of the returned reference node."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:458
# 6f94f394e1ba4aa099e3c0f6ddeacfeb
msgid "Emitted when a doctree has been \"resolved\" by the environment, that is, all references have been resolved and TOCs have been inserted.  The *doctree* can be modified in place."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:462
# 5803511358554655824a9e525f8799e9
msgid "Here is the place to replace custom nodes that don't have visitor methods in the writers, so that they don't cause errors when the writers encounter them."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:467
# a0207e85ec174840838450878ad0bf93
msgid "Emitted when the :meth:`update` method of the build environment has completed, that is, the environment and all doctrees are now up-to-date."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:474
# e20cff2c2bef4dcea4ff5cfa921e11db
msgid "Emitted when the HTML builder is starting to write non-document pages.  You can add pages to write by returning an iterable from this event consisting of ``(pagename, context, templatename)``."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:482
# b0a2668375514d13b8b259f65a01e283
msgid "Emitted when the HTML builder has created a context dictionary to render a template with -- this can be used to add custom elements to the context."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:485
# 2df75aeed660446b9485627f568182bf
msgid "The *pagename* argument is the canonical name of the page being rendered, that is, without ``.html`` suffix and using slashes as path separators.  The *templatename* is the name of the template to render, this will be ``'page.html'`` for all pages from reST documents."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:490
# 4c80fc04dcdc49a8ad5c822cc3c06d27
msgid "The *context* argument is a dictionary of values that are given to the template engine to render the page and can be modified to include custom values.  Keys must be strings."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:494
# af03ea4891194871a26a13abb0dcb241
msgid "The *doctree* argument will be a doctree when the page is created from a reST documents; it will be ``None`` when the page is created from an HTML template alone."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:502
# b7953ddc915c45a7bceed47d518d5595
msgid "Emitted when a build has finished, before Sphinx exits, usually used for cleanup.  This event is emitted even when the build process raised an exception, given as the *exception* argument.  The exception is reraised in the application after the event handlers have run.  If the build process raised no exception, *exception* will be ``None``.  This allows to customize cleanup actions depending on the exception status."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:513
# 66eea58abf4a414e87daeba1a2c1edde
msgid "Checking the Sphinx version"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:517
# 42a4c65db2e349e692894ed134bd78c3
msgid "Use this to adapt your extension to API changes in Sphinx."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:521
# dd8e2bf51cce4c64bd20329c009a7c39
msgid "A tuple of five elements; for Sphinx version 1.2.1 beta 3 this would be ``(1, 2, 1, 'beta', 3)``."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:524
# 621e889cf78d495a9870c4327ccfabc3
msgid "Before version 1.2, check the string ``sphinx.__version__``."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:529
# 59ae4a3e65df489498e4ed0e64100e18
msgid "The Config object"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:535
# b26017d50a0c4bc7a6fafd1f769b7121
msgid "The config object makes the values of all config values available as attributes."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:538
# a9eb45b6225f4dd892f337f2b09c4c58
msgid "It is available as the ``config`` attribute on the application and environment objects.  For example, to get the value of :confval:`language`, use either ``app.config.language`` or ``env.config.language``."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:546
# 5710dfa106b64915a66c4a144d0b0485
msgid "The template bridge"
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.TemplateBridge:1
# 87f402c9bc23416d9055c967f26a6bf0
msgid "This class defines the interface for a \"template bridge\", that is, a class that renders templates given a template name and a context."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.TemplateBridge.init:1
# d42f781e462246228644da681d9d5f34
msgid "Called by the builder to initialize the template system."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.TemplateBridge.init:3
# 1cca006387ca42c09b6f8dd58ee9f561
msgid "*builder* is the builder object; you'll probably want to look at the value of ``builder.config.templates_path``."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.TemplateBridge.init:6
# 8262af77034042a3a2553cd14f28a9ae
msgid "*theme* is a :class:`sphinx.theming.Theme` object or None; in the latter case, *dirs* can be list of fixed directories to look for templates."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.TemplateBridge.newest_template_mtime:1
# 6cec57c8989c45b8b3048fb1eaf1757c
msgid "Called by the builder to determine if output files are outdated because of template changes.  Return the mtime of the newest template file that was changed.  The default implementation returns ``0``."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.TemplateBridge.render:1
# b66e403b70a643e9b63fb3be21b3d582
msgid "Called by the builder to render a template given as a filename with a specified context (a Python dictionary)."
msgstr ""

#: ..\..\sphinx\sphinx\application.py:docstring of sphinx.application.TemplateBridge.render_string:1
# 9d7bf7f371054b9aac69bd578d7b2478
msgid "Called by the builder to render a template given as a string with a specified context (a Python dictionary)."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:557
# a09539a4dd184aa6bdf1c2ba6c71ac9a
msgid "Exceptions"
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:563
# d613945a370e471081d317ee01eea102
msgid "This is the base class for \"nice\" exceptions.  When such an exception is raised, Sphinx will abort the build and present the exception category and message to the user."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:567
# 98e0fb3ba30148aab52976e02fd81788
msgid "Extensions are encouraged to derive from this exception for their custom errors."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:570
# d89deed623514e24ab0fa6bfce88f522
msgid "Exceptions *not* derived from :exc:`SphinxError` are treated as unexpected and shown to the user with a part of the traceback (and the full traceback saved in a temporary file)."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:576
# 36b5371c4c8c4abeba38a48f3bff6700
msgid "Description of the exception \"category\", used in converting the exception to a string (\"category: message\").  Should be set accordingly in subclasses."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:582
# 85fbfe5e60c94c9f85e3b53e93d7bf87
msgid "Used for erroneous values or nonsensical combinations of configuration values."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:587
# 5f4f8650252f4287ae90d672126921c2
msgid "Used for errors in setting up extensions."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:591
# 129e407fb85d4f2d884de5df3913f54b
msgid "Used for errors to do with themes."
msgstr ""

#: ..\..\sphinx\doc\extdev\appapi.rst:595
# 3b9b9b921b0d488597263b30a4a9acf8
msgid "Raised when the docs require a higher Sphinx version than the current one."
msgstr ""

