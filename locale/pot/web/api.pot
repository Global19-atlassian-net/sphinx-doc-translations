# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2014, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-16 17:31+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\sphinx\doc\web\api.rst:6
# f884447c0550443a9266b54c85c3f415
msgid "The WebSupport Class"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:10
# 8eba54792c1443da8dbdc7312e48aeb1
msgid "The main API class for the web support package.  All interactions with the web support package should occur through this class."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:13
# 075b6c44d651456b819f603c56a2f95b
msgid "The class takes the following keyword arguments:"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:16
# 1109e70ddcc948758950cb237dfadce8
msgid "srcdir"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:16
# 75f26cdc4a714cc0af9a78bd63e39e39
msgid "The directory containing reStructuredText source files."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:21
# de7a70f7772e4441a7dbc24e6eb74e84
msgid "builddir"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:19
# 2406c6a2b06f4d4d829e84957aafc9e2
msgid "The directory that build data and static files should be placed in.  This should be used when creating a :class:`WebSupport` object that will be used to build data."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:25
# e6f0cec1652347d8abfb03774d2a27dd
msgid "datadir"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:24
# c78519be08434e4baae4aa04ac81b915
msgid "The directory that the web support data is in.  This should be used when creating a :class:`WebSupport` object that will be used to retrieve data."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:30
# 45e56411c6bf4d5d9ae427a525266692
msgid "search"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:28
# dcb9cea9ce534dc8a780a6aef29f8c45
msgid "This may contain either a string (e.g. 'xapian') referencing a built-in search adapter to use, or an instance of a subclass of :class:`~.search.BaseSearch`."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:35
# d32204e5875f4b318906d9195791a867
msgid "storage"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:33
# a0fc8a2fb6c84680b5e2fd681246e722
msgid "This may contain either a string representing a database uri, or an instance of a subclass of :class:`~.storage.StorageBackend`.  If this is not provided, a new sqlite database will be created."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:40
# 55367fae9e4c4c18abf2e4c6306ddcbc
msgid "moderation_callback"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:38
# f07725a580104bd7acf3dbfd2714b9cc
msgid "A callable to be called when a new comment is added that is not displayed.  It must accept one argument: a dictionary representing the comment that was added."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:45
# bcf9933d2ab04ec1a56800d85248d073
msgid "staticdir"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:43
# 372abee2108a49c589c96d08ea6fc46d
msgid "If static files are served from a location besides ``'/static'``, this should be a string with the name of that location (e.g. ``'/static_files'``)."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:48
# 33a27af3f6224610a5873fc6ed96074e
msgid "docroot"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:48
# bc3fe977e93243588476cbbf4b55d933
msgid "If the documentation is not served from the base path of a URL, this should be a string specifying that path (e.g. ``'docs'``)."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:53
# d35b5aad08de4319b9df1e64439cb540
msgid "Methods"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.build:1
# 773a1c58915449e3ab66cfe641f0e0da
msgid "Build the documentation. Places the data into the `outdir` directory. Use it like this::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.build:7
# 5110e1ec2e0d46199b84d32f64d7e986
msgid "This will read reStructured text files from `srcdir`. Then it will build the pickles and search index, placing them into `builddir`. It will also save node data to the database."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:1
# 6363d5b3042149ed9c55a58f08543d56
msgid "Load and return a document from a pickle. The document will be a dict object which can be used to render a template::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:7
# 0ddd87455f7d44e99b9da1f8d8cdef0a
msgid "In most cases `docname` will be taken from the request path and passed directly to this function. In Flask, that would be something like this::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:22
# 244946171ef44370b4fe79710918eb56
msgid "The document dict that is returned contains the following items to be used during template rendering."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:25
# 1703e89b13584e8193193b6d5f16c15f
msgid "**body**: The main body of the document as HTML"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:26
# f66e34cf79e24df2b415af23dfbabba3
msgid "**sidebar**: The sidebar of the document as HTML"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:27
# c1963eb20a304f6b80f158e2233f1e86
msgid "**relbar**: A div containing links to related documents"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:28
# b4a742a12d1f461b80c4dd652f7215fe
msgid "**title**: The title of the document"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:29
# 13cfb441a045498fa0051b5184837b4c
msgid "**css**: Links to css files used by Sphinx"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:30
# 1bc37f3d4a8144a6b1e3240f21f36438
msgid "**script**: Javascript containing comment options"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:32
# 69204a7be6fc441db8967d12e10ce24e
msgid "This raises :class:`~sphinx.websupport.errors.DocumentNotFoundError` if a document matching `docname` is not found."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:35
# 83ca93d5af464760996e8eb730fae793
msgid "the name of the document to load."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:1
# 5966bd9877024537879c9bb51b9aeaa5
msgid "Get the comments and source associated with `node_id`. If `username` is given vote information will be included with the returned comments. The default CommentBackend returns a dict with two keys, *source*, and *comments*. *source* is raw source of the node and is used as the starting point for proposals a user can add. *comments* is a list of dicts that represent a comment, each having the following items:"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:10
# 7dcaa39fdf924972b56d4d1c7214d797
msgid "Key"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:10
# e76a95b5f16447c5a4cf9ea62c3171f4
msgid "Contents"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:12
# c5d7f9df057142e8a0e5b1d5f67be82e
msgid "text"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:12
# 239e7ab65c1549deb2db679dd19c8ecf
msgid "The comment text."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:13
# ea6ee52cbd044d1c8ea627ab3c1f781a
msgid "username"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:13
# 196caa5aecd6474eb786ec3505dc91d6
msgid "The username that was stored with the comment."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:14
# 68f2363b66124863b4133f1b74223afe
msgid "id"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:14
# 44ceaabaf53f493da4510348a9404d3b
msgid "The comment's unique identifier."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:15
# ef23c4868b154cd9bfc24fc2943ed376
msgid "rating"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:15
# 8972e68932ce4b0587e10da6e1e04e8b
msgid "The comment's current rating."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:16
# 0d4a37fe17854e4d8fbae8d9f4d643d4
msgid "age"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:16
# f858cecb767d4a84b3995e493e161880
msgid "The time in seconds since the comment was added."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:17
# 11dc0deff97847268cfbf0eb6222b439
msgid "time"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:17
# dcf6c960de8640a5960e5feeb91e50a4
msgid "A dict containing time information. It contains the following keys: year, month, day, hour, minute, second, iso, and delta. `iso` is the time formatted in ISO 8601 format. `delta` is a printable form of how old the comment is (e.g. \"3 hours ago\")."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:22
# 661326b55ecb421390d8f1cfd85a60b7
msgid "vote"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:22
# 3bb208926e16467b9a0cc878e135fd78
msgid "If `user_id` was given, this will be an integer representing the vote. 1 for an upvote, -1 for a downvote, or 0 if unvoted."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:25
# e3586f196a554e1480ca2468623be67c
msgid "node"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:25
# 948b3496855c499f9645b7829d9d47b3
msgid "The id of the node that the comment is attached to. If the comment's parent is another comment rather than a node, this will be null."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:28
# 773d999c33ee4a67860b4eb458ca2aef
msgid "parent"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:28
# 74a4eef012074ff9935e825e534c4b45
msgid "The id of the comment that this comment is attached to if it is not attached to a node."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:30
# 3b9d631ebca64b469110737864085bc8
msgid "children"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:30
# 0a15379bb3f2471796e3bd9c252945d0
msgid "A list of all children, in this format."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:31
# a3f5d652af7e4a579efcc311815f347b
msgid "proposal_diff"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:31
# 2f2b7aa2f26e4a729a5dcd74cad4e083
msgid "An HTML representation of the differences between the the current source and the user's proposed source."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:35
# 239f13efc83145999e8a0b27dcffb8ae
msgid "the id of the node to get comments for."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:36
# 2de20900dfc94206870daee0476a7abb
msgid "the username of the user viewing the comments."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:37
# 89acea95a972465896eb6b7b40bd84a2
msgid "whether the user is a moderator."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:1
# e8924c52fc5941289f81b074496bfeed
msgid "Add a comment to a node or another comment. Returns the comment in the same format as :meth:`get_comments`. If the comment is being attached to a node, pass in the node's id (as a string) with the node keyword argument::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:8
# d4eaecdfaa63428a8ce1e1bcdf19d3e5
msgid "If the comment is the child of another comment, provide the parent's id (as a string) with the parent keyword argument::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:13
# 1bccc8454c3041808cdd90a31f82346f
msgid "If you would like to store a username with the comment, pass in the optional `username` keyword argument::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:19
# bd33aae4a6f9415d9f733ac4a1474ba0
msgid "the prefixed id of the comment's parent."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:20
# a847480bf23341c7820ea5246a8e67db
msgid "the text of the comment."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:21
# afd95699e872415c91d2d44ddea85900
msgid "for moderation purposes"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:22
# 05b02d104c984724bcc84e648b5d0e9a
msgid "the username of the user making the comment."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:23
# d4a2aea2b5944365aa75a30f5a418cb7
msgid "the time the comment was created, defaults to now."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.process_vote:1
# 90105be0a78f4ff9b1c511551363ae60
msgid "Process a user's vote. The web support package relies on the API user to perform authentication. The API user will typically receive a comment_id and value from a form, and then make sure the user is authenticated. A unique username  must be passed in, which will also be used to retrieve the user's past voting data. An example, once again in Flask::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.process_vote:19
# 658821f5f60448d0977075017e61215b
msgid "the comment being voted on"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.process_vote:20
# aa7f68cef20e47a982d2c817fe592c80
msgid "the unique username of the user voting"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.process_vote:21
# 051df534fa7b463a9b3c2ac686dec640
msgid "1 for an upvote, -1 for a downvote, 0 for an unvote."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_search_results:1
# ce98188f2606451095bf497e787dc50e
msgid "Perform a search for the query `q`, and create a set of search results. Then render the search results as html and return a context dict like the one created by :meth:`get_document`::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_search_results:8
# 19c2c391598249888aef21c6930eb1a5
msgid "the search query"
msgstr ""

