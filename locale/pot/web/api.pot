# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2014, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-30 17:52+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\sphinx\doc\web\api.rst:6
# e9958501a46b48cdb46bcbc29b1efc3c
msgid "The WebSupport Class"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:10
# c24770092720433eadf9abe0d3f6c193
msgid "The main API class for the web support package.  All interactions with the web support package should occur through this class."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:13
# 8854ed5213464eff98967c8bd6ed1d06
msgid "The class takes the following keyword arguments:"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:16
# 9473c1ab1fa94380bb500e3e4c549e7a
msgid "srcdir"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:16
# 7c453e3feb784f869f4373841ce768d1
msgid "The directory containing reStructuredText source files."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:21
# fe6abc45fd274980a849fce707902e08
msgid "builddir"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:19
# 846d257d6e5245799cd58e61729fa6b4
msgid "The directory that build data and static files should be placed in.  This should be used when creating a :class:`WebSupport` object that will be used to build data."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:25
# 785309a8e7cd4a5a8aa93374daae65f1
msgid "datadir"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:24
# 1e10a2bf1424488f82390b894f567083
msgid "The directory that the web support data is in.  This should be used when creating a :class:`WebSupport` object that will be used to retrieve data."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:30
# 26a02eb11a6e41b99e1262fda41a3d23
msgid "search"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:28
# f1201ead30cd4ff9b10fddfadd8b06ed
msgid "This may contain either a string (e.g. 'xapian') referencing a built-in search adapter to use, or an instance of a subclass of :class:`~.search.BaseSearch`."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:35
# 4628ab76cc054c62a767f97755dbec8b
msgid "storage"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:33
# a631c2d1e1d9488c978438345285b42b
msgid "This may contain either a string representing a database uri, or an instance of a subclass of :class:`~.storage.StorageBackend`.  If this is not provided, a new sqlite database will be created."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:40
# 740ff33ee71b4f0881b1ecc4b3a579f7
msgid "moderation_callback"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:38
# 723411facf1e4a1fab4cc50095481737
msgid "A callable to be called when a new comment is added that is not displayed.  It must accept one argument: a dictionary representing the comment that was added."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:45
# 280fcc94350d444ea1708b3d4cd88739
msgid "staticdir"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:43
# 503f88d6bfbf4022a4f31f0eb7494779
msgid "If static files are served from a location besides ``'/static'``, this should be a string with the name of that location (e.g. ``'/static_files'``)."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:48
# 1ca1d93e1a1744a8b7deaa3fc9c90d1e
msgid "docroot"
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:48
# e34ac459f4fb427eadffd5cf5569ea11
msgid "If the documentation is not served from the base path of a URL, this should be a string specifying that path (e.g. ``'docs'``)."
msgstr ""

#: ..\..\sphinx\doc\web\api.rst:53
# 8422645963084ba3a86cc990b2c6f2f1
msgid "Methods"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.build:1
# c2af7004c355459cb672327fd4e54c16
msgid "Build the documentation. Places the data into the `outdir` directory. Use it like this::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.build:7
# e679f1ad66cc44079257f564f62856ea
msgid "This will read reStructured text files from `srcdir`. Then it will build the pickles and search index, placing them into `builddir`. It will also save node data to the database."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:1
# 122ea7f906c64e878b454b51e3b64e06
msgid "Load and return a document from a pickle. The document will be a dict object which can be used to render a template::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:7
# fbf548268df24c7aaa4d4a57fc8fac1b
msgid "In most cases `docname` will be taken from the request path and passed directly to this function. In Flask, that would be something like this::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:22
# c1f6b036ee264ab18842d5829312c74a
msgid "The document dict that is returned contains the following items to be used during template rendering."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:25
# 9ba89aa7bcfd4b72a7569db0a7e7b54f
msgid "**body**: The main body of the document as HTML"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:26
# 0e83d90b765542d8bd80bd4592589d46
msgid "**sidebar**: The sidebar of the document as HTML"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:27
# a50c44e8579042b4b3eaa09ca0330a2f
msgid "**relbar**: A div containing links to related documents"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:28
# 1f4567c06c5f43bbaaf61a9366c218a3
msgid "**title**: The title of the document"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:29
# 830b0ef1bf3a4e408b8d7e90b56b3401
msgid "**css**: Links to css files used by Sphinx"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:30
# d3b5eb10b89648f18f5efa93f2df3a40
msgid "**script**: Javascript containing comment options"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:32
# a48df9bcc46043308d2d17a69f5820bc
msgid "This raises :class:`~sphinx.websupport.errors.DocumentNotFoundError` if a document matching `docname` is not found."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_document:35
# 5cd286caa5214849a99b0dc3208029d0
msgid "the name of the document to load."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:1
# 788e261bf16e4b08bfc042d5608f54fb
msgid "Get the comments and source associated with `node_id`. If `username` is given vote information will be included with the returned comments. The default CommentBackend returns a dict with two keys, *source*, and *comments*. *source* is raw source of the node and is used as the starting point for proposals a user can add. *comments* is a list of dicts that represent a comment, each having the following items:"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:10
# e124c1e9552a49e3a90220c2f621c9b5
msgid "Key"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:10
# da5336a59cab4943a719c3f9eafa34fa
msgid "Contents"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:12
# 608ca66b4e934b49b92a46581b56bc9d
msgid "text"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:12
# c9dfcbeba89c48a89c84198622cd8ce4
msgid "The comment text."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:13
# 8495c5e30d3442719cd2d93426408f3d
msgid "username"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:13
# 76158d09e8d04234bd8cb9f8edeeb748
msgid "The username that was stored with the comment."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:14
# fdd4aaac04594b93a7818e2d4aeefacc
msgid "id"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:14
# 3956af36bbc84b3c9d852c88c24e9b87
msgid "The comment's unique identifier."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:15
# ac5dc472d38248fdaa00486378f9284f
msgid "rating"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:15
# a293b317ae2b475ba95ce7ab9ecc45cf
msgid "The comment's current rating."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:16
# 81c90267d70b4a73a037061aea0df9b7
msgid "age"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:16
# e78b551a5189499590d6935011e1683b
msgid "The time in seconds since the comment was added."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:17
# 2c8195bea8644ad9a682f94d049dea15
msgid "time"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:17
# 31eab5c569034c249faa877e0874a87f
msgid "A dict containing time information. It contains the following keys: year, month, day, hour, minute, second, iso, and delta. `iso` is the time formatted in ISO 8601 format. `delta` is a printable form of how old the comment is (e.g. \"3 hours ago\")."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:22
# 377dc53be52043b5948d17bb7f4d8888
msgid "vote"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:22
# dfc8057d5c9c442183b0f0919f827f65
msgid "If `user_id` was given, this will be an integer representing the vote. 1 for an upvote, -1 for a downvote, or 0 if unvoted."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:25
# 23908a0a18e245dd93068623037d4f72
msgid "node"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:25
# 5bc5fa13ad6247a9b6d45f52990147b2
msgid "The id of the node that the comment is attached to. If the comment's parent is another comment rather than a node, this will be null."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:28
# 6d1ee1bec3174758839563fe8b9f172d
msgid "parent"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:28
# 6b0506aa983445f2bc49beb009d4a981
msgid "The id of the comment that this comment is attached to if it is not attached to a node."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:30
# b1b61365eda5434986d690f89187b510
msgid "children"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:30
# c01c8760e12f41a0999356cbdf0bc94c
msgid "A list of all children, in this format."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:31
# 113e8bc606aa44c78a96d20149dbc0a5
msgid "proposal_diff"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:31
# 1a96fdba04404fb3877fc9a384ff23d8
msgid "An HTML representation of the differences between the the current source and the user's proposed source."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:35
# e7a604b29404465bb2e44f17da5413cc
msgid "the id of the node to get comments for."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:36
# d34e243f2ca7467290e7599a824313e9
msgid "the username of the user viewing the comments."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_data:37
# 8cc1a1aced504904b6f7fe51c99c17e0
msgid "whether the user is a moderator."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:1
# 9791dd2a2f514a0fbb657fb7757338bc
msgid "Add a comment to a node or another comment. Returns the comment in the same format as :meth:`get_comments`. If the comment is being attached to a node, pass in the node's id (as a string) with the node keyword argument::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:8
# e7eea9dbd57f4d7cb8c6bdb3f31a36a4
msgid "If the comment is the child of another comment, provide the parent's id (as a string) with the parent keyword argument::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:13
# 92d764c154d84f4f9eab7a9ccc4de67f
msgid "If you would like to store a username with the comment, pass in the optional `username` keyword argument::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:19
# 075f6c5b088a41779b89d4b41e269773
msgid "the prefixed id of the comment's parent."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:20
# e721a205565543399f0c7dcf1c226c1c
msgid "the text of the comment."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:21
# 2f198ad181e74155b582dbafd08c57f8
msgid "for moderation purposes"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:22
# 5ab74396122547e28543f8b198bac049
msgid "the username of the user making the comment."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.add_comment:23
# ff8baf57474e44f7b7f0c7dc082a551e
msgid "the time the comment was created, defaults to now."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.process_vote:1
# 3228883afb424b5aa4f083c6a791110b
msgid "Process a user's vote. The web support package relies on the API user to perform authentication. The API user will typically receive a comment_id and value from a form, and then make sure the user is authenticated. A unique username  must be passed in, which will also be used to retrieve the user's past voting data. An example, once again in Flask::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.process_vote:19
# 7f5472d4f02b4850930f3b52e363c5d6
msgid "the comment being voted on"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.process_vote:20
# 0a48056d3a8a4bc09c2cc6eb7e8e064d
msgid "the unique username of the user voting"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.process_vote:21
# adfba44c92e2472c9dfc893b0e79c437
msgid "1 for an upvote, -1 for a downvote, 0 for an unvote."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_search_results:1
# e31f4869778644cd8d37cd75ecf86cbc
msgid "Perform a search for the query `q`, and create a set of search results. Then render the search results as html and return a context dict like the one created by :meth:`get_document`::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\__init__.py:docstring of sphinx.websupport.WebSupport.get_search_results:8
# 7219b196a52b4780a7b6203661ddc1ca
msgid "the search query"
msgstr ""

