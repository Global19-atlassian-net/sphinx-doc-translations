# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2014, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-16 17:31+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\sphinx\doc\web\searchadapters.rst:6
# 0b16147d83a34351a27d3a8132b28f4c
msgid "Search Adapters"
msgstr ""

#: ..\..\sphinx\doc\web\searchadapters.rst:8
# f7b580182c4b4fe997a41ab47512eb2c
msgid "To create a custom search adapter you will need to subclass the :class:`BaseSearch` class.  Then create an instance of the new class and pass that as the `search` keyword argument when you create the :class:`~.WebSupport` object::"
msgstr ""

#: ..\..\sphinx\doc\web\searchadapters.rst:17
# b5d2790e0a4a4062b44489b41ef0ebb1
msgid "For more information about creating a custom search adapter, please see the documentation of the :class:`BaseSearch` class below."
msgstr ""

#: ..\..\sphinx\doc\web\searchadapters.rst:22
# 1083da1f8d5b461288b2e3a3ac34bc05
msgid "Defines an interface for search adapters."
msgstr ""

#: ..\..\sphinx\doc\web\searchadapters.rst:26
# ff13fea13b7c4ca59b65404a8b801230
msgid "BaseSearch Methods"
msgstr ""

#: ..\..\sphinx\doc\web\searchadapters.rst:28
# 8df9684b60c3429b9f4f36e0951c8916
msgid "The following methods are defined in the BaseSearch class. Some methods do not need to be overridden, but some (:meth:`~BaseSearch.add_document` and :meth:`~BaseSearch.handle_query`) must be overridden in your subclass. For a working example, look at the built-in adapter for whoosh."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.init_indexing:1
# c272d6f6f52b4798a4b6892b6e5e1ec5
msgid "Called by the builder to initialize the search indexer. `changed` is a list of pagenames that will be reindexed. You may want to remove these from the search index before indexing begins."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.init_indexing:5
# e28cf624e67a43afa54021fbea13b027
msgid "a list of pagenames that will be re-indexed"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.finish_indexing:1
# 7da4156fdd60400e82d444678843461a
msgid "Called by the builder when writing has been completed. Use this to perform any finalization or cleanup actions after indexing is complete."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.feed:1
# 0dd10f5af73e44c196024ebbbb305d7b
msgid "Called by the builder to add a doctree to the index. Converts the `doctree` to text and passes it to :meth:`add_document`. You probably won't want to override this unless you need access to the `doctree`. Override :meth:`add_document` instead."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.feed:6
# 8cc7491725c74d21aec894012e9ab943
msgid "the name of the page to be indexed"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.feed:7
# 7cd7c4e37c5f453baff5f3c623dc1b4d
msgid "the title of the page to be indexed"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.feed:8
# 3cd0d8fdea69460fb241f02286ed745a
msgid "is the docutils doctree representation of the page"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.add_document:1
# 2a6548f635a54ee0a5ab77cbb2570b25
msgid "Called by :meth:`feed` to add a document to the search index. This method should should do everything necessary to add a single document to the search index."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.add_document:5
# 093173582dfc4b7898e7b90cae4932b0
msgid "`pagename` is name of the page being indexed. It is the combination of the source files relative path and filename, minus the extension. For example, if the source file is \"ext/builders.rst\", the `pagename` would be \"ext/builders\". This will need to be returned with search results when processing a query."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.add_document:12
# ee8d182941214d178f6f63ae4091a245
msgid "the name of the page being indexed"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.add_document:13
# 2ec501c6fc34481483bb85bab188826b
msgid "the page's title"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.add_document:14
# f98bbc4d2a574b2c83ac8e77cbe6dfe7
msgid "the full text of the page"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.query:1
# d87ebd2be0d24e558f3d38b3b3dfe21e
msgid "Called by the web support api to get search results. This method compiles the regular expression to be used when :meth:`extracting context <extract_context>`, then calls :meth:`handle_query`.  You won't want to override this unless you don't want to use the included :meth:`extract_context` method.  Override :meth:`handle_query` instead."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.query:7
# 63f2812d389d426a908231ca44c3c717
msgid "the search query string."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.handle_query:1
# d2e0eb31f08c4025a65f5b5b46c00d86
msgid "Called by :meth:`query` to retrieve search results for a search query `q`. This should return an iterable containing tuples of the following format::"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.handle_query:7
# c9a391a1907c4364b8e0ac2ef15f135d
msgid "`path` and `title` are the same values that were passed to :meth:`add_document`, and `context` should be a short text snippet of the text surrounding the search query in the document."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.handle_query:11
# c3129949627f44fa9e295d731e000aaa
msgid "The :meth:`extract_context` method is provided as a simple way to create the `context`."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.handle_query:14
# 556cd617dc844224baefdb4c355900a3
msgid "the search query"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.extract_context:1
# ab0380bfa5bb4deeac210b9c9dfdd546
msgid "Extract the context for the search query from the document's full `text`."
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.extract_context:4
# e6b4d400810645e9bea62856c39f63db
msgid "the full text of the document to create the context for"
msgstr ""

#: ..\..\sphinx\sphinx\websupport\search\__init__.py:docstring of sphinx.websupport.search.BaseSearch.extract_context:5
# 3f217b8a38c5410d883bca1f36e55375
msgid "the length of the context snippet to return."
msgstr ""

