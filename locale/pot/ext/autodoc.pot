# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2014, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-30 17:52+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\sphinx\doc\ext\autodoc.rst:4
# cf05c5b4e6424cd68f5e7487c7ecc61a
msgid ":mod:`sphinx.ext.autodoc` -- Include documentation from docstrings"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:12
# c6565f10f60349829ddb2c24f44fed98
msgid "This extension can import the modules you are documenting, and pull in documentation from docstrings in a semi-automatic way."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:17
# 9e9a87c3d49e43bc99c2555b9808b540
msgid "For Sphinx (actually, the Python interpreter that executes Sphinx) to find your module, it must be importable.  That means that the module or the package must be in one of the directories on :data:`sys.path` -- adapt your :data:`sys.path` in the configuration file accordingly."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:24
# 62a8497495c54ac3aafb4a28af9b0a17
msgid ":mod:`~sphinx.ext.autodoc` **imports** the modules to be documented.  If any modules have side effects on import, these will be executed by ``autodoc`` when ``sphinx-build`` is run."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:28
# 23064a152214452284cab7b7a4f00558
msgid "If you document scripts (as opposed to library modules), make sure their main routine is protected by a ``if __name__ == '__main__'`` condition."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:31
# 8afc91d088194708b968b89b9fc2f847
msgid "For this to work, the docstrings must of course be written in correct reStructuredText.  You can then use all of the usual Sphinx markup in the docstrings, and it will end up correctly in the documentation.  Together with hand-written documentation, this technique eases the pain of having to maintain two locations for documentation, while at the same time avoiding auto-generated-looking pure API documentation."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:38
# 1dfc501fbb9c4f39acce99dce57fafd4
msgid ":mod:`autodoc` provides several directives that are versions of the usual :rst:dir:`py:module`, :rst:dir:`py:class` and so forth.  On parsing time, they import the corresponding module and extract the docstring of the given objects, inserting them into the page source under a suitable :rst:dir:`py:module`, :rst:dir:`py:class` etc.  directive."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:46
# a78b3e3aa62c4bacaa87ca32c95b929d
msgid "Just as :rst:dir:`py:class` respects the current :rst:dir:`py:module`, :rst:dir:`autoclass` will also do so.  Likewise, :rst:dir:`automethod` will respect the current :rst:dir:`py:class`."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:55
# 0a0cb9cdaeef4723bae7db07940b7a45
msgid "Document a module, class or exception.  All three directives will by default only insert the docstring of the object itself::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:60
# 44bd0e98d6d6474cb570eab7781dbdf3
msgid "will produce source like this::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:66
# 2e6fce632f5c4cc99d06b97740756a5e
msgid "The \"auto\" directives can also contain content of their own, it will be inserted into the resulting non-auto directive source after the docstring (but before any automatic member documentation)."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:70
# 77930207df8f49f5a3fd1b86947b3c4c
msgid "Therefore, you can also mix automatic and non-automatic member documentation, like so::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:80
# 33ccf2944d5f4344ba681952676115db
msgid "**Options and advanced usage**"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:82
# 72ef09327ff94b149be55974a30bf2c2
msgid "If you want to automatically document members, there's a ``members`` option::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:88
# 9991133b92cb4c419e332e5ebd593c5e
msgid "will document all module members (recursively), and ::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:93
# 58bc629869564c1eab8b259a79ddd06f
msgid "will document all non-private member functions and properties (that is, those whose name doesn't start with ``_``)."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:96
# 4a193d2f07bc4d8cb4338aa65432bc85
msgid "For modules, ``__all__`` will be respected when looking for members; the order of the members will also be the order in ``__all__``."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:99
# c32774a110534e1aa687a9534fe12382
msgid "You can also give an explicit list of members; only these will then be documented::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:105
# 0b2ded3cf6684b499a0a18a25ef13052
msgid "If you want to make the ``members`` option (or other flag options described below) the default, see :confval:`autodoc_default_flags`."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:108
# 537ad9d5df9d4db18fd4b323a6ece6c1
msgid "Members without docstrings will be left out, unless you give the ``undoc-members`` flag option::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:115
# b979d0f6198443979ec0d3683911e127
msgid "\"Private\" members (that is, those named like ``_private`` or ``__private``) will be included if the ``private-members`` flag option is given."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:120
# 6886c102da1640619f09b4aead20f350
msgid "Python \"special\" members (that is, those named like ``__special__``) will be included if the ``special-members`` flag option is given::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:128
# 349d31d40fcd459c8178c865253b92b2
msgid "would document both \"private\" and \"special\" members of the class."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:132
# a84ba25d10ab41d8903d992cb5d7f0ef
msgid "The option can now take arguments, i.e. the special members to document."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:135
# 97f22b049818403fafd2968dcf49ad5e
msgid "For classes and exceptions, members inherited from base classes will be left out when documenting all members, unless you give the ``inherited-members`` flag option, in addition to ``members``::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:143
# 94d5400afca2406796abb939f084b367
msgid "This can be combined with ``undoc-members`` to document *all* available members of the class or module."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:146
# 57f5bd4ed1d942b6937bfa53379b04f5
msgid "Note: this will lead to markup errors if the inherited members come from a module whose docstrings are not reST formatted."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:151
# 379a5892c87448e8a9b4bf4188ffa9f8
msgid "It's possible to override the signature for explicitly documented callable objects (functions, methods, classes) with the regular syntax that will override the signature gained from introspection::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:159
# 48336842a6a2401fbbc13157f06463d7
msgid "This is useful if the signature from the method is hidden by a decorator."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:163
# 040e6ba994404aefb8e45cb65ab9201f
msgid "The :rst:dir:`automodule`, :rst:dir:`autoclass` and :rst:dir:`autoexception` directives also support a flag option called ``show-inheritance``.  When given, a list of base classes will be inserted just below the class signature (when used with :rst:dir:`automodule`, this will be inserted for every class that is documented in the module)."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:171
# 635aa77383f846be997c83b0a504cf89
msgid "All autodoc directives support the ``noindex`` flag option that has the same effect as for standard :rst:dir:`py:function` etc. directives: no index entries are generated for the documented object (and all autodocumented members)."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:178
# 7232cb3ecb8e41d2887a4f1fc247d3eb
msgid ":rst:dir:`automodule` also recognizes the ``synopsis``, ``platform`` and ``deprecated`` options that the standard :rst:dir:`py:module` directive supports."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:184
# c9bb0d519f2946998ab746e72a431621
msgid ":rst:dir:`automodule` and :rst:dir:`autoclass` also has an ``member-order`` option that can be used to override the global value of :confval:`autodoc_member_order` for one directive."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:190
# 06ead8ddb17c4e6a996626cdba455bd0
msgid "The directives supporting member documentation also have a ``exclude-members`` option that can be used to exclude single member names from documentation, if all members are to be documented."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:196
# 334aa3565ed546f680a90f12c33b5ccb
msgid "In an :rst:dir:`automodule` directive with the ``members`` option set, only module members whose ``__module__`` attribute is equal to the module name as given to ``automodule`` will be documented.  This is to prevent documentation of imported classes or functions.  Set the ``imported-members`` option if you want to prevent this behavior and document all available members.  Note that attributes from imported modules will not be documented, because attribute documentation is discovered by parsing the source file of the current module."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:213
# f581cc7721b54bf0884e5efa5630183f
msgid "These work exactly like :rst:dir:`autoclass` etc., but do not offer the options used for automatic member documentation."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:216
# 26d0b4b6db98451baa56303fa6186595
msgid ":rst:dir:`autodata` and :rst:dir:`autoattribute` support the ``annotation`` option. Without this option, the representation of the object will be shown in the documentation. When the option is given without arguments, only the name of the object will be printed::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:226
# 0745b8d538a648149438b644baa1d14d
msgid "You can tell sphinx what should be printed after the name::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:231
# 70018ad784544067b4580c4112427df0
msgid "For module data members and class attributes, documentation can either be put into a comment with special formatting (using a ``#:`` to start the comment instead of just ``#``), or in a docstring *after* the definition.  Comments need to be either on a line of their own *before* the definition, or immediately after the assignment *on the same line*.  The latter form is restricted to one line only."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:238
# f2a1dfadf97546c3baff6ddd230ae596
msgid "This means that in the following class definition, all attributes can be autodocumented::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:260
# dcf7d95e1c5a40ef96ee2f58d400ab6d
msgid ":rst:dir:`autodata` and :rst:dir:`autoattribute` can now extract docstrings."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:262
# 4898c736598f4eaf8334661f1262d649
msgid "Comment docs are now allowed on the same line after an assignment."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:265
# eb7f35319544420381e9d182699f9dfb
msgid ":rst:dir:`autodata` and :rst:dir:`autoattribute` have an ``annotation`` option"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:271
# 9b1262a63df04d46898b58817e444dfa
msgid "If you document decorated functions or methods, keep in mind that autodoc retrieves its docstrings by importing the module and inspecting the ``__doc__`` attribute of the given function or method.  That means that if a decorator replaces the decorated function with another, it must copy the original ``__doc__`` to the new function."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:277
# ef8f238672ff407e9a3197dd9fd131e4
msgid "From Python 2.5, :func:`functools.wraps` can be used to create well-behaved decorating functions."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:281
# e528ce155ff1424a85be99141b44b32a
msgid "There are also new config values that you can set:"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:285
# 2335e36253fc4b599cecb437e3bf58fb
msgid "This value selects what content will be inserted into the main body of an :rst:dir:`autoclass` directive.  The possible values are:"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:290
# 6f7218211a1548c5a2957b83ee1d3d6e
msgid "``\"class\"``"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:289
# a21f1e0bfc9e4da8a7a4622a8a6667c9
msgid "Only the class' docstring is inserted.  This is the default.  You can still document ``__init__`` as a separate method using :rst:dir:`automethod` or the ``members`` option to :rst:dir:`autoclass`."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:293
# 10ca2eb6635e421b8ccab783deafd2a9
msgid "``\"both\"``"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:293
# 94da6aae61fd4ba9a3b0b66b1e50f578
msgid "Both the class' and the ``__init__`` method's docstring are concatenated and inserted."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:296
# 775300d88bc848cd81255f7432722526
msgid "``\"init\"``"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:296
# fe93cd1272c54317bda22a2c39e7761d
msgid "Only the ``__init__`` method's docstring is inserted."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:302
# 7b930bf3c5464244980657bfb7b277f7
msgid "This value selects if automatically documented members are sorted alphabetical (value ``'alphabetical'``), by member type (value ``'groupwise'``) or by source order (value ``'bysource'``).  The default is alphabetical."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:307
# b717b229d7484da5aecbc4a5787e177c
msgid "Note that for source order, the module must be a Python module with the source code available."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:311
# 6935e67a276849d9aa098fbf9e5605be
msgid "Support for ``'bysource'``."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:316
# 1c43fd1826d84ebeab6ac2dbb8b31160
msgid "This value is a list of autodoc directive flags that should be automatically applied to all autodoc directives.  The supported flags are ``'members'``, ``'undoc-members'``, ``'private-members'``, ``'special-members'``, ``'inherited-members'`` and ``'show-inheritance'``."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:321
# ac758b0104ea43689c02ea204966764f
msgid "If you set one of these flags in this config value, you can use a negated form, :samp:`'no-{flag}'`, in an autodoc directive, to disable it once. For example, if ``autodoc_default_flags`` is set to ``['members', 'undoc-members']``, and you write a directive like this::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:329
# 9b5f829c66ab40f9adf482cbbf728bb3
msgid "the directive will be interpreted as if only ``:members:`` was given."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:335
# 70f32dd5f11b48ea83fbcffe444371de
msgid "Functions imported from C modules cannot be introspected, and therefore the signature for such functions cannot be automatically determined.  However, it is an often-used convention to put the signature into the first line of the function's docstring."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:340
# c218fd1d4e5c498db6851393177e61a4
msgid "If this boolean value is set to ``True`` (which is the default), autodoc will look at the first line of the docstring for functions and methods, and if it looks like a signature, use the line as the signature and remove it from the docstring content."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:349
# ca96528f02d4445597a41b64ae1b2b45
msgid "Docstring preprocessing"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:351
# 9384ef1730ad4d10aad7194d8be76783
msgid "autodoc provides the following additional events:"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:357
# a93078f053da49668c83002558d692e2
msgid "Emitted when autodoc has read and processed a docstring.  *lines* is a list of strings -- the lines of the processed docstring -- that the event handler can modify **in place** to change what Sphinx puts into the output."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:361
#: ..\..\sphinx\doc\ext\autodoc.rst:381
#: ..\..\sphinx\doc\ext\autodoc.rst:418
# bd0f34e4a8be46359c77367fa5844033
# 24d21d1b84624dc9aab1ea7d4a437eaa
# 22be9c47e69c49979195c2c0d6a52e26
msgid "the Sphinx application object"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:362
#: ..\..\sphinx\doc\ext\autodoc.rst:382
#: ..\..\sphinx\doc\ext\autodoc.rst:419
# 88fbad499d6c471abb9b16be469d32d7
# 663d0c0c1a494a57b6138e58b7a6f9e8
# 3dffe00617bd4e1b8dde711fa7063b43
msgid "the type of the object which the docstring belongs to (one of ``\"module\"``, ``\"class\"``, ``\"exception\"``, ``\"function\"``, ``\"method\"``, ``\"attribute\"``)"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:365
#: ..\..\sphinx\doc\ext\autodoc.rst:385
#: ..\..\sphinx\doc\ext\autodoc.rst:422
# 25d8c930fa594460888abd98e69336b1
# e36dd9d3937a43f8ad8f80dbbe63d5a0
# 91124d7d55ee45799b9b42188a4128d7
msgid "the fully qualified name of the object"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:366
#: ..\..\sphinx\doc\ext\autodoc.rst:386
#: ..\..\sphinx\doc\ext\autodoc.rst:423
# db68d0ea2ca149bbaebfd8efe35a72bf
# de15bf338b0b496c8825acacc864266a
# 65ed29ef62ed484ebf77c1017db77497
msgid "the object itself"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:367
#: ..\..\sphinx\doc\ext\autodoc.rst:387
#: ..\..\sphinx\doc\ext\autodoc.rst:426
# 85785a5350b74c2fb69ef5a828e4a7f4
# 5566b273a51f4c72a69db011eba06a33
# cacdc4464d464feb980347e61b2112e4
msgid "the options given to the directive: an object with attributes ``inherited_members``, ``undoc_members``, ``show_inheritance`` and ``noindex`` that are true if the flag option of same name was given to the auto directive"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:371
# 804401fc99354433981db065a22e80f3
msgid "the lines of the docstring, see above"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:377
# 97026a1b7c0f430d95d401368a51fb4d
msgid "Emitted when autodoc has formatted a signature for an object. The event handler can return a new tuple ``(signature, return_annotation)`` to change what Sphinx puts into the output."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:391
# 129a78bcbb254ac0a8968f16938f1a4b
msgid "function signature, as a string of the form ``\"(parameter_1, parameter_2)\"``, or ``None`` if introspection didn't succeed and signature wasn't specified in the directive."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:394
# ce88d4b4fffb4019a5b93a588798b0f4
msgid "function return annotation as a string of the form ``\" -> annotation\"``, or ``None`` if there is no return annotation"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:397
# 74da02a3341749769e997cba72d05268
msgid "The :mod:`sphinx.ext.autodoc` module provides factory functions for commonly needed docstring processing in event :event:`autodoc-process-docstring`:"
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.cut_lines:1
# 0b76ebce2d59455585e275ea11563c48
msgid "Return a listener that removes the first *pre* and last *post* lines of every docstring.  If *what* is a sequence of strings, only docstrings of a type in *what* will be processed."
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.cut_lines:5
# 7f9d4fdad70d47f783b35925d8b52f5a
msgid "Use like this (e.g. in the ``setup()`` function of :file:`conf.py`)::"
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.cut_lines:10
# 5d3c85312f2741e290dc78d2140ba1a9
msgid "This can (and should) be used in place of :confval:`automodule_skip_lines`."
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.between:1
# 19bd71963f4d4a0ab9e518642934b045
msgid "Return a listener that either keeps, or if *exclude* is True excludes, lines between lines that match the *marker* regular expression.  If no line matches, the resulting docstring would be empty, so no change will be made unless *keepempty* is true."
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.between:6
# 1c56b71d75174963b24547461cff6f88
msgid "If *what* is a sequence of strings, only docstrings of a type in *what* will be processed."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:405
# ab768dc356fa4c6881164d59dcbe9899
msgid "Skipping members"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:407
# 776da51926424a5bb8f335a3a81bd714
msgid "autodoc allows the user to define a custom method for determining whether a member should be included in the documentation by using the following event:"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:414
# f3a2dd61322642a1a79c6582c354cbfb
msgid "Emitted when autodoc has to decide whether a member should be included in the documentation.  The member is excluded if a handler returns ``True``.  It is included if the handler returns ``False``."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:424
# 37bb6ba64e96428ea503e3595fb8a796
msgid "a boolean indicating if autodoc will skip this member if the user handler does not override the decision"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:9
# c5c03d227d0a40cda5c94566fad06695
msgid "automatic"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:9
# c5c03d227d0a40cda5c94566fad06695
msgid "documentation"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:9
# c5c03d227d0a40cda5c94566fad06695
msgid "docstring"
msgstr ""

