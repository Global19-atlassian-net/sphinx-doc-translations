# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2014, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-16 17:31+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\sphinx\doc\ext\autodoc.rst:4
# 7f3e796bf7d947b180959f5c5486805b
msgid ":mod:`sphinx.ext.autodoc` -- Include documentation from docstrings"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:12
# b34d5b580e03402faa3d5f3b41140807
msgid "This extension can import the modules you are documenting, and pull in documentation from docstrings in a semi-automatic way."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:17
# 3e2186b3676641cc86385e6f7ab5e7e9
msgid "For Sphinx (actually, the Python interpreter that executes Sphinx) to find your module, it must be importable.  That means that the module or the package must be in one of the directories on :data:`sys.path` -- adapt your :data:`sys.path` in the configuration file accordingly."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:24
# 1877dce09c904b2ca4c4fdb7088f244d
msgid ":mod:`~sphinx.ext.autodoc` **imports** the modules to be documented.  If any modules have side effects on import, these will be executed by ``autodoc`` when ``sphinx-build`` is run."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:28
# aadde4019c5a488aa5bbeb47b2db22d3
msgid "If you document scripts (as opposed to library modules), make sure their main routine is protected by a ``if __name__ == '__main__'`` condition."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:31
# 3bdb724792154bbf9a80882a4dbc3e08
msgid "For this to work, the docstrings must of course be written in correct reStructuredText.  You can then use all of the usual Sphinx markup in the docstrings, and it will end up correctly in the documentation.  Together with hand-written documentation, this technique eases the pain of having to maintain two locations for documentation, while at the same time avoiding auto-generated-looking pure API documentation."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:38
# 7f510131b61e4477865e1df44eb5c508
msgid ":mod:`autodoc` provides several directives that are versions of the usual :rst:dir:`py:module`, :rst:dir:`py:class` and so forth.  On parsing time, they import the corresponding module and extract the docstring of the given objects, inserting them into the page source under a suitable :rst:dir:`py:module`, :rst:dir:`py:class` etc.  directive."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:46
# b949b3b4b803491b935ec31df733c0c3
msgid "Just as :rst:dir:`py:class` respects the current :rst:dir:`py:module`, :rst:dir:`autoclass` will also do so.  Likewise, :rst:dir:`automethod` will respect the current :rst:dir:`py:class`."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:55
# a9c1c6f15b4e4edbbfcb30df9c74006e
msgid "Document a module, class or exception.  All three directives will by default only insert the docstring of the object itself::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:60
# 9d4a61be21b447669e526bc4717b6f35
msgid "will produce source like this::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:66
# 7c62f8a3f42c4104aee29a6ea7c928ec
msgid "The \"auto\" directives can also contain content of their own, it will be inserted into the resulting non-auto directive source after the docstring (but before any automatic member documentation)."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:70
# cff189793e4a4be697035437e3fcd6d2
msgid "Therefore, you can also mix automatic and non-automatic member documentation, like so::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:80
# 5888d71507b14bf886c7252f60c1ebc4
msgid "**Options and advanced usage**"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:82
# 51448342affd4a388182a00bb4774c37
msgid "If you want to automatically document members, there's a ``members`` option::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:88
# 9957f81c2a4b45d9911c9a292f586f51
msgid "will document all module members (recursively), and ::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:93
# 0477ebb1729e4965bbc23324996d654e
msgid "will document all non-private member functions and properties (that is, those whose name doesn't start with ``_``)."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:96
# eca97b2cfed64606a5073704c2749c2c
msgid "For modules, ``__all__`` will be respected when looking for members; the order of the members will also be the order in ``__all__``."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:99
# 7c2fbd9738d04bf7a44eea9c2df99bb7
msgid "You can also give an explicit list of members; only these will then be documented::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:105
# aa9d452a1a0c436ab3e3d1964b3e961b
msgid "If you want to make the ``members`` option (or other flag options described below) the default, see :confval:`autodoc_default_flags`."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:108
# f6112ba618614303b4f45d037acd9574
msgid "Members without docstrings will be left out, unless you give the ``undoc-members`` flag option::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:115
# 1d8bea3316814961a0335cdf22e1bd31
msgid "\"Private\" members (that is, those named like ``_private`` or ``__private``) will be included if the ``private-members`` flag option is given."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:120
# 8d0fcbd1b0b9493cbb6d22c5a73a8a59
msgid "Python \"special\" members (that is, those named like ``__special__``) will be included if the ``special-members`` flag option is given::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:128
# a85c0565e439434f8e3e6c782ac617ee
msgid "would document both \"private\" and \"special\" members of the class."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:132
# 400fd91d3bad4fa989bc383b149886d0
msgid "The option can now take arguments, i.e. the special members to document."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:135
# a584dfe949dd4517a7ff122a30376cd6
msgid "For classes and exceptions, members inherited from base classes will be left out when documenting all members, unless you give the ``inherited-members`` flag option, in addition to ``members``::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:143
# a00cd36fdba347bd8e868ca1fd8f9e52
msgid "This can be combined with ``undoc-members`` to document *all* available members of the class or module."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:146
# 5d2180e0726c4922afe3bdd854302dd1
msgid "Note: this will lead to markup errors if the inherited members come from a module whose docstrings are not reST formatted."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:151
# 16f6a4d037884397a519fe3eee99a85f
msgid "It's possible to override the signature for explicitly documented callable objects (functions, methods, classes) with the regular syntax that will override the signature gained from introspection::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:159
# 1eaf879f52564c7fac45f5ad1d12d612
msgid "This is useful if the signature from the method is hidden by a decorator."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:163
# 3f5c65a12a484528b7c35de046e1032c
msgid "The :rst:dir:`automodule`, :rst:dir:`autoclass` and :rst:dir:`autoexception` directives also support a flag option called ``show-inheritance``.  When given, a list of base classes will be inserted just below the class signature (when used with :rst:dir:`automodule`, this will be inserted for every class that is documented in the module)."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:171
# 5b2cd38c5fa54de89a91c6bc75daa287
msgid "All autodoc directives support the ``noindex`` flag option that has the same effect as for standard :rst:dir:`py:function` etc. directives: no index entries are generated for the documented object (and all autodocumented members)."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:178
# 19b1655d18b4480ab1374a1fc79ce21d
msgid ":rst:dir:`automodule` also recognizes the ``synopsis``, ``platform`` and ``deprecated`` options that the standard :rst:dir:`py:module` directive supports."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:184
# bcad287943164d52b822e682109240c8
msgid ":rst:dir:`automodule` and :rst:dir:`autoclass` also has an ``member-order`` option that can be used to override the global value of :confval:`autodoc_member_order` for one directive."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:190
# bc618d214c844b2a87bca4decd6121e4
msgid "The directives supporting member documentation also have a ``exclude-members`` option that can be used to exclude single member names from documentation, if all members are to be documented."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:196
# b71f6393e993459481f171bb96acae82
msgid "In an :rst:dir:`automodule` directive with the ``members`` option set, only module members whose ``__module__`` attribute is equal to the module name as given to ``automodule`` will be documented.  This is to prevent documentation of imported classes or functions.  Set the ``imported-members`` option if you want to prevent this behavior and document all available members.  Note that attributes from imported modules will not be documented, because attribute documentation is discovered by parsing the source file of the current module."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:213
# 00c502fe1fdf4763993ba87893d2b041
msgid "These work exactly like :rst:dir:`autoclass` etc., but do not offer the options used for automatic member documentation."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:216
# d179db74167e494793e086d05144c650
msgid ":rst:dir:`autodata` and :rst:dir:`autoattribute` support the ``annotation`` option. Without this option, the representation of the object will be shown in the documentation. When the option is given without arguments, only the name of the object will be printed::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:226
# 4dfdddcea4ab48ff9cdceb44374fada3
msgid "You can tell sphinx what should be printed after the name::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:231
# 565b741f6fda48cbab3fa7f977f33bce
msgid "For module data members and class attributes, documentation can either be put into a comment with special formatting (using a ``#:`` to start the comment instead of just ``#``), or in a docstring *after* the definition.  Comments need to be either on a line of their own *before* the definition, or immediately after the assignment *on the same line*.  The latter form is restricted to one line only."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:238
# d91a259564ac486e9ded73707c1f00ba
msgid "This means that in the following class definition, all attributes can be autodocumented::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:260
# 02fcf6b1b0064ddebdb450f3c3fd47c3
msgid ":rst:dir:`autodata` and :rst:dir:`autoattribute` can now extract docstrings."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:262
# 1cf814eda3014251be1df0576eefb7dd
msgid "Comment docs are now allowed on the same line after an assignment."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:265
# 599e6c5165164f2d9c2484fa6a420a1d
msgid ":rst:dir:`autodata` and :rst:dir:`autoattribute` have an ``annotation`` option"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:271
# 2a83629e21d34745b6f33e6c59f9d628
msgid "If you document decorated functions or methods, keep in mind that autodoc retrieves its docstrings by importing the module and inspecting the ``__doc__`` attribute of the given function or method.  That means that if a decorator replaces the decorated function with another, it must copy the original ``__doc__`` to the new function."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:277
# eb028465958b4c739916060745b201e5
msgid "From Python 2.5, :func:`functools.wraps` can be used to create well-behaved decorating functions."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:281
# 78ea4cd1bffa4f4e996f6fd7e2a52047
msgid "There are also new config values that you can set:"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:285
# 075f611983164239b8bffaabba501553
msgid "This value selects what content will be inserted into the main body of an :rst:dir:`autoclass` directive.  The possible values are:"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:290
# f5e2f9daab534b08971c8d33c5beb0d0
msgid "``\"class\"``"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:289
# f9683f1ff7b64a298e7b74a42fc041ef
msgid "Only the class' docstring is inserted.  This is the default.  You can still document ``__init__`` as a separate method using :rst:dir:`automethod` or the ``members`` option to :rst:dir:`autoclass`."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:293
# b78673d5e73249079477c9d31b305d4e
msgid "``\"both\"``"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:293
# 46caddbffde8418984c21973caab39a1
msgid "Both the class' and the ``__init__`` method's docstring are concatenated and inserted."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:296
# a9e0e3c5ac2143efae1cc461c42a35fb
msgid "``\"init\"``"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:296
# a1d80326369a4449a15556215ab9f5e2
msgid "Only the ``__init__`` method's docstring is inserted."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:302
# 2d84bc281b0343b08c8190607a432b6b
msgid "This value selects if automatically documented members are sorted alphabetical (value ``'alphabetical'``), by member type (value ``'groupwise'``) or by source order (value ``'bysource'``).  The default is alphabetical."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:307
# 42bf0843fe1447138c9591b251143302
msgid "Note that for source order, the module must be a Python module with the source code available."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:311
# dc11edb638d841f4bc95169cd95f51e0
msgid "Support for ``'bysource'``."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:316
# ae6acdcbaf26481b8857e3067d68c88f
msgid "This value is a list of autodoc directive flags that should be automatically applied to all autodoc directives.  The supported flags are ``'members'``, ``'undoc-members'``, ``'private-members'``, ``'special-members'``, ``'inherited-members'`` and ``'show-inheritance'``."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:321
# e95b2e45802e486e896fee22f20bdeb1
msgid "If you set one of these flags in this config value, you can use a negated form, :samp:`'no-{flag}'`, in an autodoc directive, to disable it once. For example, if ``autodoc_default_flags`` is set to ``['members', 'undoc-members']``, and you write a directive like this::"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:329
# a0c40bb43a0847cf99e35dd709801df9
msgid "the directive will be interpreted as if only ``:members:`` was given."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:335
# fbbe45e369b44f62bb7255e7cec6eeb9
msgid "Functions imported from C modules cannot be introspected, and therefore the signature for such functions cannot be automatically determined.  However, it is an often-used convention to put the signature into the first line of the function's docstring."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:340
# 3b9fb631324048d095cb4e6972d86aea
msgid "If this boolean value is set to ``True`` (which is the default), autodoc will look at the first line of the docstring for functions and methods, and if it looks like a signature, use the line as the signature and remove it from the docstring content."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:349
# e512b66eedc840999f6135500beb50ec
msgid "Docstring preprocessing"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:351
# 630d7c1643ed45f3b9b21fe722d8a05c
msgid "autodoc provides the following additional events:"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:357
# 1f4237747adc4bb580567303929d5105
msgid "Emitted when autodoc has read and processed a docstring.  *lines* is a list of strings -- the lines of the processed docstring -- that the event handler can modify **in place** to change what Sphinx puts into the output."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:361
#: ..\..\sphinx\doc\ext\autodoc.rst:381
#: ..\..\sphinx\doc\ext\autodoc.rst:418
# d1eaa278dba5464aa42f85d36b3a279e
# 11ab9b6802504b8e9584999a488b3aaf
# c9158333cea741deaf9e39326f677609
msgid "the Sphinx application object"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:362
#: ..\..\sphinx\doc\ext\autodoc.rst:382
#: ..\..\sphinx\doc\ext\autodoc.rst:419
# c88a803d158c4eeab66546c1df2cbd25
# c626a833d757456e8c4b189b8d764b96
# 06483c9f62cb4e4f90260e80c9feeada
msgid "the type of the object which the docstring belongs to (one of ``\"module\"``, ``\"class\"``, ``\"exception\"``, ``\"function\"``, ``\"method\"``, ``\"attribute\"``)"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:365
#: ..\..\sphinx\doc\ext\autodoc.rst:385
#: ..\..\sphinx\doc\ext\autodoc.rst:422
# cf1550f5c287402fa093db5e8f0e84c5
# 38cf687fe4ab41d686d3f31afa9bbc08
# a67855de199d45e28e63f1310d5039b9
msgid "the fully qualified name of the object"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:366
#: ..\..\sphinx\doc\ext\autodoc.rst:386
#: ..\..\sphinx\doc\ext\autodoc.rst:423
# 2958653c955343408036fe77420dac44
# c34b9773b5f547c38191c787d224e04d
# f623ccc2e48446d19459ed6666244bd0
msgid "the object itself"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:367
#: ..\..\sphinx\doc\ext\autodoc.rst:387
#: ..\..\sphinx\doc\ext\autodoc.rst:426
# dd9fad275d9a49158643b84b8a8fba88
# d60efa43acd34241bc7d916f9cbb0331
# 97ac68e841884b449e613ebe48454215
msgid "the options given to the directive: an object with attributes ``inherited_members``, ``undoc_members``, ``show_inheritance`` and ``noindex`` that are true if the flag option of same name was given to the auto directive"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:371
# 3dc5c9707ad54637b8cd481612e4e89d
msgid "the lines of the docstring, see above"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:377
# f52919eb1874450a9f192a7de4025026
msgid "Emitted when autodoc has formatted a signature for an object. The event handler can return a new tuple ``(signature, return_annotation)`` to change what Sphinx puts into the output."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:391
# 7d7c1d898e99437fabf1951d9e13b4ab
msgid "function signature, as a string of the form ``\"(parameter_1, parameter_2)\"``, or ``None`` if introspection didn't succeed and signature wasn't specified in the directive."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:394
# 2da3f65b47464bee8a7cc4f8eab40435
msgid "function return annotation as a string of the form ``\" -> annotation\"``, or ``None`` if there is no return annotation"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:397
# 584a366706ad495aa4a08506a8fcedf0
msgid "The :mod:`sphinx.ext.autodoc` module provides factory functions for commonly needed docstring processing in event :event:`autodoc-process-docstring`:"
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.cut_lines:1
# 6d1824c58e4d4214bf1266b0b76d8748
msgid "Return a listener that removes the first *pre* and last *post* lines of every docstring.  If *what* is a sequence of strings, only docstrings of a type in *what* will be processed."
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.cut_lines:5
# 351a61c88cba4e1c8d4c5184f827442a
msgid "Use like this (e.g. in the ``setup()`` function of :file:`conf.py`)::"
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.cut_lines:10
# b9f42c5f6aca4bdb86833c03763af247
msgid "This can (and should) be used in place of :confval:`automodule_skip_lines`."
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.between:1
# fce1d78d82114a71b765618873a1c349
msgid "Return a listener that either keeps, or if *exclude* is True excludes, lines between lines that match the *marker* regular expression.  If no line matches, the resulting docstring would be empty, so no change will be made unless *keepempty* is true."
msgstr ""

#: ..\..\sphinx\sphinx\ext\autodoc.py:docstring of sphinx.ext.autodoc.between:6
# b8492b0797544ca1b359e080c345046d
msgid "If *what* is a sequence of strings, only docstrings of a type in *what* will be processed."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:405
# c4c76e7adaec4919924db2d43719bd41
msgid "Skipping members"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:407
# a38469ad7d514333a8366397e02b4ee8
msgid "autodoc allows the user to define a custom method for determining whether a member should be included in the documentation by using the following event:"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:414
# c446f76a70fe4bad9203a3e64db36a84
msgid "Emitted when autodoc has to decide whether a member should be included in the documentation.  The member is excluded if a handler returns ``True``.  It is included if the handler returns ``False``."
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:424
# 7226ebbd8a134605b229749120903798
msgid "a boolean indicating if autodoc will skip this member if the user handler does not override the decision"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:9
# 87f4e58bd9c94283aab459c2ef3e0bc0
msgid "automatic"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:9
# 87f4e58bd9c94283aab459c2ef3e0bc0
msgid "documentation"
msgstr ""

#: ..\..\sphinx\doc\ext\autodoc.rst:9
# 87f4e58bd9c94283aab459c2ef3e0bc0
msgid "docstring"
msgstr ""

