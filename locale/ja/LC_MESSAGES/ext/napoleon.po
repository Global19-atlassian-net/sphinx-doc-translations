# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2016, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# 
# Translators:
# shirou - しろう <shirou.faw@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: sphinx-doc-1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-12 13:56+0000\n"
"PO-Revision-Date: 2016-03-28 13:57+0000\n"
"Last-Translator: sphinx-users.jp <shimizukawa+sphinxjp@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/sphinx-doc/sphinx-doc-1_4/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../ext/napoleon.rst:2
msgid ""
":mod:`sphinx.ext.napoleon` -- Support for NumPy and Google style docstrings"
msgstr ":mod:`sphinx.ext.napoleon` -- NumPy および Google スタイルの docstring をドキュメントに取り込む"

#: ../../ext/napoleon.rst:12
msgid "Napoleon - *Marching toward legible docstrings*"
msgstr ""

#: ../../ext/napoleon.rst:16
msgid "Are you tired of writing docstrings that look like this::"
msgstr "以下のようなdocstringを書こうとしてみたことはあるでしょうか。"

#: ../../ext/napoleon.rst:28
msgid ""
"`ReStructuredText`_ is great, but it creates visually dense, hard to read "
"`docstrings`_. Compare the jumble above to the same thing rewritten "
"according to the `Google Python Style Guide`_::"
msgstr "`ReStructuredText`_ は偉大ですが、視覚的に高密度になり、 `docstrings`_ が読み難くなります。同じものを`Google Python Style Guide`_で書き直したものと乱雑さを比較してみましょう::"

#: ../../ext/napoleon.rst:41
msgid "Much more legible, no?"
msgstr "はるかに読みやすいですよね。"

#: ../../ext/napoleon.rst:43
msgid ""
"Napoleon is a :doc:`../extensions` that enables Sphinx to parse both "
"`NumPy`_ and `Google`_ style docstrings - the style recommended by `Khan "
"Academy`_."
msgstr "Napoleonは、 `NumPy`_ スタイルおよび `Google`_スタイル（`Khan Academy`_が推奨しているスタイル）の両方でSphinxがパースできるようにしてくれる :doc:`../extensions` です。"

#: ../../ext/napoleon.rst:46
msgid ""
"Napoleon is a pre-processor that parses `NumPy`_ and `Google`_ style "
"docstrings and converts them to reStructuredText before Sphinx attempts to "
"parse them. This happens in an intermediate step while Sphinx is processing "
"the documentation, so it doesn't modify any of the docstrings in your actual"
" source code files."
msgstr "Napoleon はSphinx がパースしようとする前に、`NumPy`_スタイルと`Google`_スタイルの docstring を reStructuredText に変換するプリプロセッサです。 これはSphinx がドキュメントを処理する間の中間ステップで起こるので、実際のソースコードの docstrings を変更することは全くありません。"

#: ../../ext/napoleon.rst:64
msgid "Getting Started"
msgstr "Getting Started"

#: ../../ext/napoleon.rst:66
msgid ""
"After :doc:`setting up Sphinx <../tutorial>` to build your docs, enable "
"napoleon in the Sphinx `conf.py` file::"
msgstr ""

#: ../../ext/napoleon.rst:74
msgid "Use `sphinx-apidoc` to build your API documentation::"
msgstr "`sphinx-apidoc`を使用して、ご自身のAPIドキュメンテーションをビルドしましょう::"

#: ../../ext/napoleon.rst:80
msgid "Docstrings"
msgstr ""

#: ../../ext/napoleon.rst:82
msgid ""
"Napoleon interprets every docstring that :mod:`autodoc <sphinx.ext.autodoc>`"
" can find, including docstrings on: ``modules``, ``classes``, "
"``attributes``, ``methods``, ``functions``, and ``variables``. Inside each "
"docstring, specially formatted `Sections`_ are parsed and converted to "
"reStructuredText."
msgstr ""

#: ../../ext/napoleon.rst:88
msgid "All standard reStructuredText formatting still works as expected."
msgstr ""

#: ../../ext/napoleon.rst:94
msgid "Docstring Sections"
msgstr ""

#: ../../ext/napoleon.rst:96
msgid "All of the following section headers are supported:"
msgstr "以下のセクションのヘッダーすべてをサポートしています:"

#: ../../ext/napoleon.rst:98
msgid "``Args`` *(alias of Parameters)*"
msgstr "``Args`` *(alias of Parameters)*"

#: ../../ext/napoleon.rst:99
msgid "``Arguments`` *(alias of Parameters)*"
msgstr "``Arguments`` *(alias of Parameters)*"

#: ../../ext/napoleon.rst:100
msgid "``Attributes``"
msgstr "``Attributes``"

#: ../../ext/napoleon.rst:101
msgid "``Example``"
msgstr "``Example``"

#: ../../ext/napoleon.rst:102
msgid "``Examples``"
msgstr "``Examples``"

#: ../../ext/napoleon.rst:103
msgid "``Keyword Args`` *(alias of Keyword Arguments)*"
msgstr "``Keyword Args`` *(alias of Keyword Arguments)*"

#: ../../ext/napoleon.rst:104
msgid "``Keyword Arguments``"
msgstr "``Keyword Arguments``"

#: ../../ext/napoleon.rst:105
msgid "``Methods``"
msgstr "``メソッド``"

#: ../../ext/napoleon.rst:106
msgid "``Note``"
msgstr "``Note``"

#: ../../ext/napoleon.rst:107
msgid "``Notes``"
msgstr "``Notes``"

#: ../../ext/napoleon.rst:108
msgid "``Other Parameters``"
msgstr "``Other Parameters``"

#: ../../ext/napoleon.rst:109
msgid "``Parameters``"
msgstr "``Parameters``"

#: ../../ext/napoleon.rst:110
msgid "``Return`` *(alias of Returns)*"
msgstr "``Return`` *(alias of Returns)*"

#: ../../ext/napoleon.rst:111
msgid "``Returns``"
msgstr "``Returns``"

#: ../../ext/napoleon.rst:112
msgid "``Raises``"
msgstr "``Raises``"

#: ../../ext/napoleon.rst:113
msgid "``References``"
msgstr "``References``"

#: ../../ext/napoleon.rst:114
msgid "``See Also``"
msgstr "``See Also``"

#: ../../ext/napoleon.rst:115
msgid "``Todo``"
msgstr "課題"

#: ../../ext/napoleon.rst:116
msgid "``Warning``"
msgstr "``Warning``"

#: ../../ext/napoleon.rst:117
msgid "``Warnings`` *(alias of Warning)*"
msgstr "``Warnings`` *(alias of Warning)*"

#: ../../ext/napoleon.rst:118
msgid "``Warns``"
msgstr "``Warns``"

#: ../../ext/napoleon.rst:119
msgid "``Yield`` *(alias of Yields)*"
msgstr "``Yield`` *(Yieldsの別名)*"

#: ../../ext/napoleon.rst:120
msgid "``Yields``"
msgstr "``Yields``"

#: ../../ext/napoleon.rst:123
msgid "Google vs NumPy"
msgstr "Google vs NumPy"

#: ../../ext/napoleon.rst:125
msgid ""
"Napoleon supports two styles of docstrings: `Google`_ and `NumPy`_. The main"
" difference between the two styles is that Google uses indention to separate"
" sections, whereas NumPy uses underlines."
msgstr "Napoleon は2つのスタイルの docstring、`Google`_ と `NumPy`_ に対応しています。この2つのスタイルの主な違いは、Googleはセクションの区切りにインデントを使い、それに対してNumPyはアンダーラインを使うことです。"

#: ../../ext/napoleon.rst:129
msgid "Google style:"
msgstr "Googleスタイル:"

#: ../../ext/napoleon.rst:148
msgid "NumPy style:"
msgstr "NumPyスタイル:"

#: ../../ext/napoleon.rst:172
msgid ""
"NumPy style tends to require more vertical space, whereas Google style tends"
" to use more horizontal space. Google style tends to be easier to read for "
"short and simple docstrings, whereas NumPy style tends be easier to read for"
" long and in-depth docstrings."
msgstr "NumPyスタイルはより垂直スペースを要する傾向にあり、それに対してGoogleスタイルはより水平スペースを使用する傾向にあります。Googleスタイルは短くてシンプルなdocstringでは読みやすい傾向にあり、それに対してNumPyスタイルは長く深層的なdocstringで読みやすくなる傾向にあります。"

#: ../../ext/napoleon.rst:177
msgid "The `Khan Academy`_ recommends using Google style."
msgstr "`Khan Academy`_ は、Googleスタイルの使用を推奨しています。"

#: ../../ext/napoleon.rst:179
msgid ""
"The choice between styles is largely aesthetic, but the two styles should "
"not be mixed. Choose one style for your project and be consistent with it."
msgstr "スタイルのあいだの選択は大部分が美的感覚のものですが、２つのスタイルは混用するべきではありません。ご自身のプロジェクトでひとつのスタイルを選び、一貫させましょう。"

#: ../../ext/napoleon.rst:184
msgid "For complete examples:"
msgstr ""

#: ../../ext/napoleon.rst:186
msgid ":ref:`example_google`"
msgstr ":ref:`example_google`"

#: ../../ext/napoleon.rst:187
msgid ":ref:`example_numpy`"
msgstr ":ref:`example_numpy`"

#: ../../ext/napoleon.rst:189
msgid "For Python type annotations, see `PEP 484`_."
msgstr "Python の型アノテーションについては `PEP 484`_ を参照して下さい。"

#: ../../ext/napoleon.rst:196
msgid "Configuration"
msgstr ""

#: ../../ext/napoleon.rst:198
msgid ""
"Listed below are all the settings used by napoleon and their default values."
" These settings can be changed in the Sphinx `conf.py` file. Make sure that "
"both \"sphinx.ext.autodoc\" and \"sphinx.ext.napoleon\" are enabled in "
"`conf.py`::"
msgstr "以下のリストは、napoleon で使われる設定とそのデフォルト値です。これらの設定はSphinx の`conf.py`で変更できます。\"sphinx.ext.autodoc\" と \"sphinx.ext.napoleon\" の両方が `conf.py` で有効になっていることを確認しましょう::"

#: ../../ext/napoleon.rst:229
msgid ""
"True to parse `Google style`_ docstrings. False to disable support for "
"Google style docstrings. *Defaults to True.*"
msgstr "True にすると `Google style`_ のdocstringsをパースします。False にするとGoogleスタイルのdocstring対応は無効化されます。 *デフォルトでTrueです。*"

#: ../../ext/napoleon.rst:234
msgid ""
"True to parse `NumPy style`_ docstrings. False to disable support for NumPy "
"style docstrings. *Defaults to True.*"
msgstr ""

#: ../../ext/napoleon.rst:239
msgid ""
"True to include private members (like ``_membername``) with docstrings in "
"the documentation. False to fall back to Sphinx's default behavior. "
"*Defaults to False.*"
msgstr ""

#: ../../ext/napoleon.rst:243 ../../ext/napoleon.rst:261
#: ../../ext/napoleon.rst:286 ../../ext/napoleon.rst:332
#: ../../ext/napoleon.rst:360 ../../ext/napoleon.rst:402
msgid "**If True**::"
msgstr ""

#: ../../ext/napoleon.rst:257
msgid ""
"True to include special members (like ``__membername__``) with docstrings in"
" the documentation. False to fall back to Sphinx's default behavior. "
"*Defaults to True.*"
msgstr ""

#: ../../ext/napoleon.rst:275
msgid ""
"True to use the ``.. admonition::`` directive for the **Example** and "
"**Examples** sections. False to use the ``.. rubric::`` directive instead. "
"One may look better than the other depending on what HTML theme is used. "
"*Defaults to False.*"
msgstr ""

#: ../../ext/napoleon.rst:280 ../../ext/napoleon.rst:325
#: ../../ext/napoleon.rst:351 ../../ext/napoleon.rst:395
msgid "This `NumPy style`_ snippet will be converted as follows::"
msgstr ""

#: ../../ext/napoleon.rst:292 ../../ext/napoleon.rst:337
#: ../../ext/napoleon.rst:367 ../../ext/napoleon.rst:407
msgid "**If False**::"
msgstr ""

#: ../../ext/napoleon.rst:300
msgid ""
"True to use the ``.. admonition::`` directive for **Notes** sections. False "
"to use the ``.. rubric::`` directive instead. *Defaults to False.*"
msgstr ""

#: ../../ext/napoleon.rst:303
msgid ""
"The singular **Note** section will always be converted to a ``.. note::`` "
"directive."
msgstr ""

#: ../../ext/napoleon.rst:308 ../../ext/napoleon.rst:318
msgid ":attr:`napoleon_use_admonition_for_examples`"
msgstr ""

#: ../../ext/napoleon.rst:312
msgid ""
"True to use the ``.. admonition::`` directive for **References** sections. "
"False to use the ``.. rubric::`` directive instead. *Defaults to False.*"
msgstr ""

#: ../../ext/napoleon.rst:322
msgid ""
"True to use the ``:ivar:`` role for instance variables. False to use the "
"``.. attribute::`` directive instead. *Defaults to False.*"
msgstr ""

#: ../../ext/napoleon.rst:347
msgid ""
"True to use a ``:param:`` role for each function parameter. False to use a "
"single ``:parameters:`` role for all the parameters. *Defaults to True.*"
msgstr ""

#: ../../ext/napoleon.rst:376
msgid ""
"True to use a ``:keyword:`` role for each function keyword argument. False "
"to use a single ``:keyword arguments:`` role for all the keywords. *Defaults"
" to True.*"
msgstr ""

#: ../../ext/napoleon.rst:381
msgid ""
"This behaves similarly to  :attr:`napoleon_use_param`. Note unlike docutils,"
" ``:keyword:`` and ``:param:`` will not be treated the same way - there will"
" be a separate \"Keyword Arguments\" section, rendered in the same fashion "
"as \"Parameters\" section (type links created if possible)"
msgstr ""

#: ../../ext/napoleon.rst:388
msgid ":attr:`napoleon_use_param`"
msgstr ""

#: ../../ext/napoleon.rst:392
msgid ""
"True to use the ``:rtype:`` role for the return type. False to output the "
"return type inline with the description. *Defaults to True.*"
msgstr ""
