# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2016, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# 
# Translators:
# Takayuki Shimizukawa <shimizukawa@gmail.com>, 2014-2015
msgid ""
msgstr ""
"Project-Id-Version: sphinx-doc-1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-29 14:23+0000\n"
"PO-Revision-Date: 2015-09-13 05:59+0000\n"
"Last-Translator: Takayuki Shimizukawa <shimizukawa@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/sphinx-doc/sphinx-doc-1_3/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../faq.rst:4
msgid "Sphinx FAQ"
msgstr "Sphinx FAQ"

#: ../../faq.rst:6
msgid ""
"This is a list of Frequently Asked Questions about Sphinx.  Feel free to "
"suggest new entries!"
msgstr "このセクションでは、Sphinxについてよく聞かれる質問とその答えについてまとめています。新しいセクションを気軽に追加してください！"

#: ../../faq.rst:10
msgid "How do I..."
msgstr "どのようにすれば..."

#: ../../faq.rst:15
msgid "... create PDF files without LaTeX?"
msgstr "... LaTeXなしでPDFファイルを作成できますか？"

#: ../../faq.rst:13
msgid ""
"You can use `rst2pdf <http://rst2pdf.googlecode.com>`_ version 0.12 or "
"greater which comes with built-in Sphinx integration.  See the "
":ref:`builders` section for details."
msgstr "Sphinx統合機能が組み込まれている、 `rst2pdf <http://rst2pdf.googlecode.com>`_ のバージョン 0.12以降を使用できます。詳細は、 :ref:`builders` のセクションをご覧下さい。"

#: ../../faq.rst:19
msgid "... get section numbers?"
msgstr "... セクション番号を設定できますか？"

#: ../../faq.rst:18
msgid ""
"They are automatic in LaTeX output; for HTML, give a ``:numbered:`` option "
"to the :rst:dir:`toctree` directive where you want to start numbering."
msgstr "LaTeX出力では自動的に設定されます。HTML出力では、 :rst:dir:`toctree` ディレクティブに対して、ナンバリングをしたい位置に対して ``:numbered:`` オプションを付けると、設定できます。"

#: ../../faq.rst:22
msgid "... customize the look of the built HTML files?"
msgstr "... ビルドするHTMLファイルの見た目をカスタマイズできますか？"

#: ../../faq.rst:22
msgid "Use themes, see :doc:`theming`."
msgstr ":doc:`theming` を読んで、テーマを利用すると、カスタマイズできます。"

#: ../../faq.rst:25
msgid "... add global substitutions or includes?"
msgstr "... すべてのドキュメントで置換を行ったり、インクルードできますか？"

#: ../../faq.rst:25
msgid "Add them in the :confval:`rst_epilog` config value."
msgstr "これらの定義を :confval:`rst_epilog` コンフィグ値を使って行ってください。"

#: ../../faq.rst:29
msgid "... display the whole TOC tree in the sidebar?"
msgstr "... すべての全体の目次をサイドバーに表示できますか？"

#: ../../faq.rst:28
msgid ""
"Use the :data:`toctree` callable in a custom layout template, probably in "
"the ``sidebartoc`` block."
msgstr "おそらく、 ``sidebartoc`` ブロックに、と想像しますが、カスタムのレイアウトテンプレートの中で、 :data:`toctree` を呼び出して使用することが可能です。"

#: ../../faq.rst:32
msgid "... write my own extension?"
msgstr "... 自分用のSphinx拡張を作成できますか？"

#: ../../faq.rst:32
msgid "See the :ref:`extension tutorial <exttut>`."
msgstr ":ref:`Sphinx拡張チュートリアル <exttut>` をご覧ください。"

#: ../../faq.rst:37
msgid "... convert from my existing docs using MoinMoin markup?"
msgstr "... MoinMoinというWikiのマークアップで書かれた既存のドキュメントから変換できますか？"

#: ../../faq.rst:35
msgid ""
"The easiest way is to convert to xhtml, then convert `xhtml to reST`_. "
"You'll still need to mark up classes and such, but the headings and code "
"examples come through cleanly."
msgstr "一番簡単な方法としてはレンダリング済みの `xhtmlからreST`_ に変換する方法でしょう。 見出しやコード例などがうまく変換できたとしても、クラスなどのマークアップはしなおす必要があるでしょう。"

#: ../../faq.rst:40
msgid "... create HTML slides from Sphinx documents?"
msgstr "... Sphinx documentsでHTMLを作成できますか？"

#: ../../faq.rst:40
msgid "See the \"Hieroglyph\" package at https://github.com/nyergler/hieroglyph."
msgstr "https://github.com/nyergler/hieroglyph の \"Hieroglyph\" パッケージを参照してください。"

#: ../../faq.rst:42
msgid ""
"For many more extensions and other contributed stuff, see the sphinx-"
"contrib_ repository."
msgstr "他にも多くの有志により提供された拡張機能があるので、sphinx-contrib_ リポジトリを参照してください。"

#: ../../faq.rst:50
msgid "Using Sphinx with..."
msgstr "Sphinxと一緒に ... を使うには？"

#: ../../faq.rst:58
msgid "Read the Docs"
msgstr "Read the Docs"

#: ../../faq.rst:53
msgid ""
"https://readthedocs.org is a documentation hosting service based around "
"Sphinx. They will host sphinx documentation, along with supporting a number "
"of other features including version support, PDF generation, and more. The "
"`Getting Started <http://read-the-"
"docs.readthedocs.org/en/latest/getting_started.html>`_ guide is a good place"
" to start."
msgstr "https://readthedocs.org はSphinxを基盤としたドキュメントホスティングサービスです。バージョン管理、PDF作成など多くの機能を持ち、Sphinxドキュメントのサービスを提供しています。始めるには `Getting Started <http://read-the-docs.readthedocs.org/en/latest/getting_started.html>`_ をまず読むと良いでしょう。"

#: ../../faq.rst:62
msgid "Epydoc"
msgstr "Epydoc"

#: ../../faq.rst:61
msgid ""
"There's a third-party extension providing an `api role`_ which refers to "
"Epydoc's API docs for a given identifier."
msgstr "`API ロール`_ を提供するサードパーティ製の拡張機能があります。このロールは、与えられた識別子を持つ要素のEpydocのAPIドキュメントを参照します。"

#: ../../faq.rst:66
msgid "Doxygen"
msgstr "Doxygen"

#: ../../faq.rst:65
msgid ""
"Michael Jones is developing a reST/Sphinx bridge to doxygen called `breathe "
"<https://github.com/michaeljones/breathe/tree/master>`_."
msgstr "Michael Jonesは reST/Sphinxをdoxygenに変換する `breathe <https://github.com/michaeljones/breathe/tree/master>`_. を開発しています。"

#: ../../faq.rst:70
msgid "SCons"
msgstr "SCons"

#: ../../faq.rst:69
msgid ""
"Glenn Hutchings has written a SCons build script to build Sphinx "
"documentation; it is hosted here: https://bitbucket.org/zondo/sphinx-scons"
msgstr "Glenn Hutchingsは SConsのビルドスクリプトをSphinxドキュメントをビルドするために書きました。https://bitbucket.org/zondo/sphinx-scons にあります。 "

#: ../../faq.rst:76
msgid "PyPI"
msgstr "PyPI"

#: ../../faq.rst:73
msgid ""
"Jannis Leidel wrote a `setuptools command <https://pypi.python.org/pypi"
"/Sphinx-PyPI-upload>`_ that automatically uploads Sphinx documentation to "
"the PyPI package documentation area at http://pythonhosted.org/."
msgstr "Jannis Leidel はSphinxドキュメントを http://pythonhosted.org/ というPyPIパッケージのドキュメントを置く場所に自動的にアップロードする `setuptools command <https://pypi.python.org/pypi/Sphinx-PyPI-upload>`_ を作成しました。"

#: ../../faq.rst:82
msgid "GitHub Pages"
msgstr "GitHub Pages"

#: ../../faq.rst:79
msgid ""
"Directories starting with underscores are ignored by default which breaks "
"static files in Sphinx.  GitHub's preprocessor can be `disabled "
"<https://github.com/blog/572-bypassing-jekyll-on-github-pages>`_ to support "
"Sphinx HTML output properly."
msgstr "デフォルトでは、Sphinxが静的ファイルを置いているような、アンダースコアで始まるディレクトリは無視されます。SphinxのHTML出力を置くために、GitHubのプリプロセッサを `無効にする <https://github.com/blog/572-bypassing-jekyll-on-github-pages>`_ ことができます。"

#: ../../faq.rst:85
msgid "MediaWiki"
msgstr "MediaWiki"

#: ../../faq.rst:85
msgid ""
"See https://bitbucket.org/kevindunn/sphinx-wiki, a project by Kevin Dunn."
msgstr "Kevin Dunnによるプロジェクトです。https://bitbucket.org/kevindunn/sphinx-wiki を見てください。"

#: ../../faq.rst:119
msgid "Google Analytics"
msgstr "Google Analytics"

#: ../../faq.rst:88
msgid "You can use a custom ``layout.html`` template, like this:"
msgstr "次のようなカスタムの ``layout.html`` テンプレートを使用できます:"

#: ../../faq.rst:128
msgid "Epub info"
msgstr "Epub情報"

#: ../../faq.rst:130
msgid "The following list gives some hints for the creation of epub files:"
msgstr "epubファイルを作成するためのいくつかのヒントを記します。"

#: ../../faq.rst:132
msgid ""
"Split the text into several files. The longer the individual HTML files are,"
" the longer it takes the ebook reader to render them.  In extreme cases, the"
" rendering can take up to one minute."
msgstr "テキストはいくつかのファイルに分割してください。長いHTMLファイルの場合、電子ブックリーダーによってはレンダリングに長い時間がかかります。極端な場合には、1分ほどかかることもあります。"

#: ../../faq.rst:136
msgid "Try to minimize the markup.  This also pays in rendering time."
msgstr "マークアップは少なくなるようにしてください。これはレンダリング時間に関わってきます。"

#: ../../faq.rst:138
msgid ""
"For some readers you can use embedded or external fonts using the CSS "
"``@font-face`` directive.  This is *extremely* useful for code listings "
"which are often cut at the right margin.  The default Courier font (or "
"variant) is quite wide and you can only display up to 60 characters on a "
"line.  If you replace it with a narrower font, you can get more characters "
"on a line.  You may even use `FontForge <http://fontforge.org/>`_ and create"
" narrow variants of some free font.  In my case I get up to 70 characters on"
" a line."
msgstr "いくつかの電子書籍リーダーのために CSS ``@font-face`` ディレクティブを使った埋め込みあるいは外部フォントを使うことが出来ます。これは右のマージンを切り詰めたプログラムコードを表示するために *とても* 便利です。標準の Courier (あるいはその派生) フォントはとても幅が広く、一行に60文字程度までしか表示できません。もしもっと幅が狭いフォントで置き換えると、一行により多くの文字を表示できます。あるいは、無料のフォントから `FontForge <http://fontforge.org/>`_ を使って幅が狭い派生フォントを作成することも出来ます。私の場合、70文字まで表示できるようになりました。"

#: ../../faq.rst:147
msgid "You may have to experiment a little until you get reasonable results."
msgstr "納得のいく結果を得るためには、多少の試行錯誤が必要になるでしょう。"

#: ../../faq.rst:149
msgid ""
"Test the created epubs. You can use several alternatives.  The ones I am "
"aware of are Epubcheck_, Calibre_, FBreader_ (although it does not render "
"the CSS), and Bookworm_.  For bookworm you can download the source from "
"http://code.google.com/p/threepress/ and run your own local server."
msgstr "作成されたepubファイルはテストしてください。いくつかの選択肢があります。私が確認するようにしているのは、 Epubcheck_, Calibre_, FBreader_ (これはCSSをレンダリングできません), Bookworm_ です。Bookwormは、 http://code.google.com/p/threepress/ からダウンロードして、ローカルのサーバ上で実行します。"

#: ../../faq.rst:154
msgid ""
"Large floating divs are not displayed properly. If they cover more than one "
"page, the div is only shown on the first page. In that case you can copy the"
" :file:`epub.css` from the ``sphinx/themes/epub/static/`` directory to your "
"local ``_static/`` directory and remove the float settings."
msgstr "大きなフローティング指定のdiv要素は適切に表示されません。もしも複数ページにわたるdiv要素があったとしても、最初のページにしか表示されません。もしこのような場合には、 ``sphinx/themes/epub/static/`` にある :file:`epub.css` をローカルの ``_static/`` にコピーして、float設定を削除してください。"

#: ../../faq.rst:160
msgid ""
"Files that are inserted outside of the ``toctree`` directive must be "
"manually included. This sometimes applies to appendixes, e.g. the glossary "
"or the indices.  You can add them with the :confval:`epub_post_files` "
"option."
msgstr "``toctree`` ディレクティブ外のファイルは、手動で含めなければなりません。用語集、索引などのAppendixが場合によっては該当します。 :confval:`epub_post_files` オプションを使うと、これらのファイルを追加できます。"

#: ../../faq.rst:164
msgid ""
"The handling of the epub cover page differs from the reStructuredText "
"procedure which automatically resolves image paths and puts the images into "
"the ``_images`` directory.  For the epub cover page put the image in the "
":confval:`html_static_path` directory and reference it with its full path in"
" the :confval:`epub_cover` config option."
msgstr "epubカバーページの扱いは、自動的に画像パスを解析し、 ``_images`` ディレクトリに画像を置いてくれる他のreStructedTextの方式とは異なります。epubカバーページでは、画像を :confval:`html_static_paht` ディレクトリに置いた上で、 :confval:`epub_cover` 設定に完全なパスを書く必要があります。"

#: ../../faq.rst:179
msgid "Texinfo info"
msgstr "Texinfo情報"

#: ../../faq.rst:181
msgid ""
"There are two main programs for reading Info files, ``info`` and GNU Emacs."
"  The ``info`` program has less features but is available in most Unix "
"environments and can be quickly accessed from the terminal.  Emacs provides "
"better font and color display and supports extensive customization (of "
"course)."
msgstr "Infoファイルを読むプログラムは、 ``info`` とGNU Emacsの2つあります。 ``info`` プログラムは機能は少ないのですが、ほとんどのUNIX環境で利用可能であり、ターミナルからのアクセスは簡単です。Emacsはフォントや色の表示がターミナルよりも優れており、(もちろん)様々なカスタマイズが可能です。"

#: ../../faq.rst:189
msgid "Displaying Links"
msgstr "リンクの表示"

#: ../../faq.rst:191
msgid ""
"One noticeable problem you may encounter with the generated Info files is "
"how references are displayed.  If you read the source of an Info file, a "
"reference to this section would look like::"
msgstr "Infoファイルの生成時の問題は、参照をどのように表示するか、です。もし、Infoファイルのソースを見ると、このセクションへのリンクは次のように書かれます::"

#: ../../faq.rst:197
msgid ""
"In the stand-alone reader, ``info``, references are displayed just as they "
"appear in the source.  Emacs, on the other-hand, will by default replace "
"``*note:`` with ``see`` and hide the ``target-id``.  For example:"
msgstr "スタンドアローンの ``info`` リーダーの場合、参照はソースコードに表示されている通りに表示されます。一方Emacsの場合は、デフォルトで ``*note:`` は ``see`` に置換され、 ``target-id`` は非表示になります。例:"

#: ../../faq.rst:201
msgid ":ref:`texinfo-links`"
msgstr ":ref:`texinfo-links`"

#: ../../faq.rst:203
msgid ""
"The exact behavior of how Emacs displays references is dependent on the "
"variable ``Info-hide-note-references``.  If set to the value of ``hide``, "
"Emacs will hide both the ``*note:`` part and the ``target-id``.  This is "
"generally the best way to view Sphinx-based documents since they often make "
"frequent use of links and do not take this limitation into account.  "
"However, changing this variable affects how all Info documents are displayed"
" and most due take this behavior into account."
msgstr "Emacsで参照をどのように表示するかは、 ``Info-hide-note-references`` 変数の定義で変わります。もしこの変数に ``hide`` を設定すると、Emacsは ``*note:`` 部分と、 ``target-id`` の両方を非表示にします。もしこの制限を気にせず、リンクを多用してSphinxベースのドキュメントを見るのであれば、この設定がベストでしょう。しかし、この変数を変えた場合に、すべてのInfoドキュメントの表示と挙動が変わってしまうことに注意が必要です。"

#: ../../faq.rst:211
msgid ""
"If you want Emacs to display Info files produced by Sphinx using the value "
"``hide`` for ``Info-hide-note-references`` and the default value for all "
"other Info files, try adding the following Emacs Lisp code to your start-up "
"file, ``~/.emacs.d/init.el``."
msgstr "もし、Sphinxで作られたInfoファイルのときだけ、 ``Info-hide-note-references`` を ``hide`` にしたい場合には、次のEmacs Lispのコードをスタートアップファイル :file:`~/.emacs.d/init.el` に追加してください。"

#: ../../faq.rst:237
msgid "Notes"
msgstr "メモ"

#: ../../faq.rst:239
msgid ""
"The following notes may be helpful if you want to create Texinfo files:"
msgstr "以下のメモは、Texinfoファイルを作る時の参考となるメモです。"

#: ../../faq.rst:241
msgid "Each section corresponds to a different ``node`` in the Info file."
msgstr "それぞれのセクションは、Infoファイルの ``node`` となります。"

#: ../../faq.rst:243
msgid ""
"Colons (``:``) cannot be properly escaped in menu entries and xrefs. They "
"will be replaced with semicolons (``;``)."
msgstr "メニューエントリーとxrefの中のコロン(``:``)はきちんとエスケープされません。これはセミコロン(``;``)にと変換されます。"

#: ../../faq.rst:246
msgid ""
"Links to external Info files can be created using the somewhat official URI "
"scheme ``info``.  For example::"
msgstr "外部のInfoファイルへの参照は、 ``info`` という公式なURIスキームを使用して作成されます。例えば::"

#: ../../faq.rst:251
msgid "which produces:"
msgstr "この表示は以下のようになります:"

#: ../../faq.rst:253
msgid "info:Texinfo#makeinfo_options"
msgstr "info:Texinfo#makeinfo_options"

#: ../../faq.rst:255
msgid "Inline markup"
msgstr "インラインマークアップ"

#: ../../faq.rst:257
msgid ""
"The standard formatting for ``*strong*`` and ``_emphasis_`` can result in "
"ambiguous output when used to markup parameter names and other values.  "
"Since this is a fairly common practice, the default formatting has been "
"changed so that ``emphasis`` and ``strong`` are now displayed like "
"```literal'``\\s."
msgstr "マークアップパラメーター名と他の値とで使われるため、標準フォーマットの ``*strong*`` と ``_emphasis_`` の出力は曖昧となります。これは非常によく見られる習慣のため、デフォルトのフォーマットが変更され、  ``emphasis`` と ``strong`` は ``literal`` と同じように表示されるようになりました。"

#: ../../faq.rst:263
msgid ""
"The standard formatting can be re-enabled by adding the following to your "
":file:`conf.py`::"
msgstr "標準フォーマットは以下の設定を :file:`conf.py` に付け加えることで再度有効になります。::"
