# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2019, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.8.6+/23be1e0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-11 08:04+0000\n"
"PO-Revision-Date: 2019-08-11 07:53+0000\n"
"Language-Team: Japanese (https://www.transifex.com/sphinx-doc/teams/15434/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/extdev/utils.rst:2
msgid "Utilities"
msgstr ""

#: ../../sphinx/doc/extdev/utils.rst:4
msgid "Sphinx provides utility classes and functions to develop extensions."
msgstr ""

#: ../../sphinx/doc/extdev/utils.rst:7
msgid "Base classes for components"
msgstr ""

#: ../../sphinx/doc/extdev/utils.rst:9
msgid ""
"These base classes are useful to allow your extensions to obtain Sphinx "
"components (e.g. :class:`.Config`, :class:`.BuildEnvironment` and so on) "
"easily."
msgstr ""

#: ../../sphinx/doc/extdev/utils.rst:12
msgid ""
"The subclasses of them might not work with bare docutils because they are "
"strongly coupled with Sphinx."
msgstr ""

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform:1
msgid "A base class of Transforms."
msgstr ""

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform:3
msgid ""
"Compared with ``docutils.transforms.Transform``, this class improves "
"accessibility to Sphinx APIs."
msgstr ""

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform.app:1
msgid "Reference to the :class:`.Sphinx` object."
msgstr ""

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform.config:1
#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective.config:1
msgid "Reference to the :class:`.Config` object."
msgstr ""

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform.env:1
#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective.env:1
msgid "Reference to the :class:`.BuildEnvironment` object."
msgstr ""

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective:1
msgid "A base class for Sphinx directives."
msgstr ""

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective:3
msgid "This class provides helper methods for Sphinx directives."
msgstr ""

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective:5
msgid ""
"The subclasses of this class might not work with docutils. This class is "
"strongly coupled with Sphinx."
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:1
msgid "A base class for image converters."
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:3
msgid ""
"An image converter is kind of Docutils transform module.  It is used to "
"convert image files which does not supported by builder to appropriate "
"format for that builder."
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:7
msgid ""
"For example, :py:class:`LaTeX builder <.LaTeXBuilder>` supports PDF, PNG and"
" JPEG as image formats.  However it does not support SVG images. For such "
"case, to use image converters allows to embed these unsupported images into "
"the document.  One of image converters; :ref:`sphinx.ext.imgconverter "
"<sphinx.ext.imgconverter>` can convert a SVG image to PNG format using "
"Imagemagick internally."
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:14
msgid "There are three steps to make your custom image converter:"
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:16
msgid "Make a subclass of ``ImageConverter`` class"
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:17
msgid "Override ``conversion_rules``, ``is_available()`` and ``convert()``"
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:18
msgid ""
"Register your image converter to Sphinx using "
":py:meth:`.Sphinx.add_post_transform`"
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.convert:1
msgid "Convert a image file to expected format."
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.convert:3
msgid ""
"*_from* is a path for source image file, and *_to* is a path for destination"
" file."
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.is_available:1
msgid "Return the image converter is available or not."
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.conversion_rules:1
msgid ""
"A conversion rules the image converter supports. It is represented as a list"
" of pair of source image format (mimetype) and destination one::"
msgstr ""
