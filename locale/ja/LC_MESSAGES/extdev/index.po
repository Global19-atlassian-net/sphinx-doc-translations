# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2016, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# 
# Translators:
# Takaaki AOKI <aoki@sakura.nucleng.kyoto-u.ac.jp>, 2016
msgid ""
msgstr ""
"Project-Id-Version: sphinx-doc-1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-29 09:08+0000\n"
"PO-Revision-Date: 2016-03-01 00:57+0000\n"
"Last-Translator: Takaaki AOKI <aoki@sakura.nucleng.kyoto-u.ac.jp>\n"
"Language-Team: Japanese (http://www.transifex.com/sphinx-doc/sphinx-doc-1_4/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../extdev/index.rst:4
msgid "Developing extensions for Sphinx"
msgstr "Sphinx拡張機能の開発"

#: ../../extdev/index.rst:6
msgid ""
"Since many projects will need special features in their documentation, "
"Sphinx is designed to be extensible on several levels."
msgstr "多くのプロジェクトはドキュメントの作成に関して特別な機能を必要とするでしょう。Sphinxはさまざまなレベルで拡張ができるように設計されています。"

#: ../../extdev/index.rst:9
msgid ""
"This is what you can do in an extension: First, you can add new "
":term:`builder`\\s to support new output formats or actions on the parsed "
"documents.  Then, it is possible to register custom reStructuredText roles "
"and directives, extending the markup.  And finally, there are so-called "
"\"hook points\" at strategic places throughout the build process, where an "
"extension can register a hook and run specialized code."
msgstr "拡張機能を通じてできることは主に３つあります。一つ目は新しい出力形式に対応したり、ドキュメントパース時の新しいアクションをサポートするために、\\ :term:`ビルダー`\\ を追加できます。二つ目は、reStructuredText用の、新しいカスタムのロールやディレクティブを追加したり、マークアップを拡張したりできます。三つ目は\"フックポイント\"と呼ばれるもので、ビルドプロセスのさまざまな箇所に存在していて、特別なコードを実行するためのフックを登録できます。"

#: ../../extdev/index.rst:16
msgid ""
"An extension is simply a Python module.  When an extension is loaded, Sphinx"
" imports this module and executes its ``setup()`` function, which in turn "
"notifies Sphinx of everything the extension offers -- see the extension "
"tutorial for examples."
msgstr "Sphinx拡張はシンプルなPythonモジュールです。拡張機能がロードされる時には、Sphinxはこのモジュールをインポートして、モジュール内にある\\ ``setup()``\\ 関数を呼び出します。この関数の中では拡張機能が提供するものをSphinxに知らせます。詳しくはSphinx拡張のチュートリアルの例を見てください。"

#: ../../extdev/index.rst:21
msgid ""
"The configuration file itself can be treated as an extension if it contains "
"a ``setup()`` function.  All other extensions to load must be listed in the "
":confval:`extensions` configuration value."
msgstr "設定ファイルそのものも、\\ ``setup()``\\ 関数を持っている場合には拡張機能として扱われます。それ以外のロードが必要なすべての拡張機能は、設定ファイルの中の :confval:`extensions` の中にリストアップしてください。"

#: ../../extdev/index.rst:26
msgid "Extension metadata"
msgstr "拡張機能のメタデータ"

#: ../../extdev/index.rst:30
msgid ""
"The ``setup()`` function can return a dictionary.  This is treated by Sphinx"
" as metadata of the extension.  Metadata keys currently recognized are:"
msgstr "\\ ``setup()``\\ 関数は、ディクショナリを返すよう定義します。"

#: ../../extdev/index.rst:33
msgid ""
"``'version'``: a string that identifies the extension version.  It is used "
"for extension version requirement checking (see :confval:`needs_extensions`)"
" and informational purposes.  If not given, ``\"unknown version\"`` is "
"substituted."
msgstr "\\ ``'version'``\\ : 拡張機能のバージョンを示す文字列。\n\\ :confval:`needs_extensions`\\ などでの拡張機能の必要バージョンのチェックに使われたり、参照目的で使われたりします。"

#: ../../extdev/index.rst:36
msgid ""
"``'parallel_read_safe'``: a boolean that specifies if parallel reading of "
"source files can be used when the extension is loaded.  It defaults to "
"``False``, i.e. you have to explicitly specify your extension to be "
"parallel-read-safe after checking that it is."
msgstr "\\ ``'parallel_read_safe'``\\ : 拡張をロードする際に、並列ロードをサポートするかどうかを示す真偽値。デフォルトは ``False`` で、拡張機能が parallel-read-safe であるであることを確認してから明示的に指定をすべきです。"

#: ../../extdev/index.rst:40
msgid ""
"``'parallel_write_safe'``: a boolean that specifies if parallel writing of "
"output files can be used when the extension is loaded.  Since extensions "
"usually don't negatively influence the process, this defaults to ``True``."
msgstr "\\ ``'parallel_write_safe'``\\ : 拡張をロードする際に、出力ファイルの並列書き込みをサポートするかどうかを示す真偽値。デフォルトは ``False`` で、拡張機能が parallel-write-safe であるであることを確認してから明示的に指定をすべきです。"

#: ../../extdev/index.rst:45
msgid "APIs used for writing extensions"
msgstr "拡張機能を書く際に使用できるAPI"
