# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2015, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: sphinx-doc-1.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-11 04:27+0000\n"
"PO-Revision-Date: 2014-07-13 04:48+0000\n"
"Last-Translator: Takayuki Shimizukawa <shimizukawa@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/sphinx-doc/sphinx-doc-1_2_0/language/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# 5ab626c44dc3406bbdbc112a649368fc
#: ../../ext/autodoc.rst:4
msgid ":mod:`sphinx.ext.autodoc` -- Include documentation from docstrings"
msgstr ""

# e5ca2ce131894f5c8b0c77afa2eeeb98
#: ../../ext/autodoc.rst:12
msgid ""
"This extension can import the modules you are documenting, and pull in "
"documentation from docstrings in a semi-automatic way."
msgstr ""

# 5b221d84fa7b41a29d9e0162a58d5c97
#: ../../ext/autodoc.rst:17
msgid ""
"For Sphinx (actually, the Python interpreter that executes Sphinx) to find "
"your module, it must be importable.  That means that the module or the "
"package must be in one of the directories on :data:`sys.path` -- adapt your "
":data:`sys.path` in the configuration file accordingly."
msgstr ""

# b8a6043dd3dd4aec831e3724f463b9f1
#: ../../ext/autodoc.rst:24
msgid ""
":mod:`~sphinx.ext.autodoc` **imports** the modules to be documented.  If any"
" modules have side effects on import, these will be executed by ``autodoc`` "
"when ``sphinx-build`` is run."
msgstr ""

# 0fe64176868942aaace1185a4e97ef0a
#: ../../ext/autodoc.rst:28
msgid ""
"If you document scripts (as opposed to library modules), make sure their "
"main routine is protected by a ``if __name__ == '__main__'`` condition."
msgstr ""

# 0aaca5bcc6e74f579daa94e5a3e1b8c2
#: ../../ext/autodoc.rst:31
msgid ""
"For this to work, the docstrings must of course be written in correct "
"reStructuredText.  You can then use all of the usual Sphinx markup in the "
"docstrings, and it will end up correctly in the documentation.  Together "
"with hand-written documentation, this technique eases the pain of having to "
"maintain two locations for documentation, while at the same time avoiding "
"auto-generated-looking pure API documentation."
msgstr ""

# 9706d82fc51242ac97e0bc711efa4c06
#: ../../ext/autodoc.rst:38
msgid ""
":mod:`autodoc` provides several directives that are versions of the usual "
":rst:dir:`py:module`, :rst:dir:`py:class` and so forth.  On parsing time, "
"they import the corresponding module and extract the docstring of the given "
"objects, inserting them into the page source under a suitable "
":rst:dir:`py:module`, :rst:dir:`py:class` etc.  directive."
msgstr ""

# 5d375bb761654304a962bd438535a62f
#: ../../ext/autodoc.rst:46
msgid ""
"Just as :rst:dir:`py:class` respects the current :rst:dir:`py:module`, "
":rst:dir:`autoclass` will also do so.  Likewise, :rst:dir:`automethod` will "
"respect the current :rst:dir:`py:class`."
msgstr ""

# 889d4f4031ed40f5b9cbcb116b4217df
#: ../../ext/autodoc.rst:55
msgid ""
"Document a module, class or exception.  All three directives will by default"
" only insert the docstring of the object itself::"
msgstr ""

# c644f924500f4a41b7e6fc96bc2aff46
#: ../../ext/autodoc.rst:60
msgid "will produce source like this::"
msgstr ""

# c7958fe3b90747be8bbd9208157171b3
#: ../../ext/autodoc.rst:66
msgid ""
"The \"auto\" directives can also contain content of their own, it will be "
"inserted into the resulting non-auto directive source after the docstring "
"(but before any automatic member documentation)."
msgstr ""

# abee981d171e4c46804952681777307b
#: ../../ext/autodoc.rst:70
msgid ""
"Therefore, you can also mix automatic and non-automatic member "
"documentation, like so::"
msgstr ""

# 1f9649fe7ed94c7ba001f5dbab28a4ff
#: ../../ext/autodoc.rst:80
msgid "**Options and advanced usage**"
msgstr ""

# cd2cc11d8dee4c87837d3ca23e82ec90
#: ../../ext/autodoc.rst:82
msgid ""
"If you want to automatically document members, there's a ``members`` "
"option::"
msgstr ""

# 6bea061b8c8d4541b895d04ed65aaacb
#: ../../ext/autodoc.rst:88
msgid "will document all module members (recursively), and ::"
msgstr ""

# 1f9b3b6bc1914927a844e38cba23a11b
#: ../../ext/autodoc.rst:93
msgid ""
"will document all non-private member functions and properties (that is, "
"those whose name doesn't start with ``_``)."
msgstr ""

# 83645968769d4c819ac2b3bf001eaa97
#: ../../ext/autodoc.rst:96
msgid ""
"For modules, ``__all__`` will be respected when looking for members; the "
"order of the members will also be the order in ``__all__``."
msgstr ""

# d1d00102337842a6806fc5160dc35423
#: ../../ext/autodoc.rst:99
msgid ""
"You can also give an explicit list of members; only these will then be "
"documented::"
msgstr ""

# 5f6eeb0aa3ab4267ae8948f89a3d1780
#: ../../ext/autodoc.rst:105
msgid ""
"If you want to make the ``members`` option (or other flag options described "
"below) the default, see :confval:`autodoc_default_flags`."
msgstr ""

# 8c98976cb8fd4fca9d61b802dee997c7
#: ../../ext/autodoc.rst:108
msgid ""
"Members without docstrings will be left out, unless you give the ``undoc-"
"members`` flag option::"
msgstr ""

# f2b7ee9df7bb4d20bbdc6598c9e8dd05
#: ../../ext/autodoc.rst:115
msgid ""
"\"Private\" members (that is, those named like ``_private`` or "
"``__private``) will be included if the ``private-members`` flag option is "
"given."
msgstr ""

# f2942033912f44588aceafe810c684cf
#: ../../ext/autodoc.rst:120
msgid ""
"Python \"special\" members (that is, those named like ``__special__``) will "
"be included if the ``special-members`` flag option is given::"
msgstr ""

# 78c50981f87a4ee2877464bc42c00db7
#: ../../ext/autodoc.rst:128
msgid "would document both \"private\" and \"special\" members of the class."
msgstr ""

# 24d9ba0c9e9042bcabea7420f19b1340
#: ../../ext/autodoc.rst:132
msgid ""
"The option can now take arguments, i.e. the special members to document."
msgstr ""

# ed2c96aa142a46f0aebe2ad823ebc526
#: ../../ext/autodoc.rst:135
msgid ""
"For classes and exceptions, members inherited from base classes will be left"
" out when documenting all members, unless you give the ``inherited-members``"
" flag option, in addition to ``members``::"
msgstr ""

# 234a1783695444a798f4feeef2b12eae
#: ../../ext/autodoc.rst:143
msgid ""
"This can be combined with ``undoc-members`` to document *all* available "
"members of the class or module."
msgstr ""

# da5221baa8bc4ba08c7b1998721be243
#: ../../ext/autodoc.rst:146
msgid ""
"Note: this will lead to markup errors if the inherited members come from a "
"module whose docstrings are not reST formatted."
msgstr ""

# 9ff2309ebec1442b88f2eabdb89558f4
#: ../../ext/autodoc.rst:151
msgid ""
"It's possible to override the signature for explicitly documented callable "
"objects (functions, methods, classes) with the regular syntax that will "
"override the signature gained from introspection::"
msgstr ""

# 0f3bfde9030b477cbdb44646e0377d4c
#: ../../ext/autodoc.rst:159
msgid ""
"This is useful if the signature from the method is hidden by a decorator."
msgstr ""

# 8784759aa9344924ab5fcb5164e5e204
#: ../../ext/autodoc.rst:163
msgid ""
"The :rst:dir:`automodule`, :rst:dir:`autoclass` and :rst:dir:`autoexception`"
" directives also support a flag option called ``show-inheritance``.  When "
"given, a list of base classes will be inserted just below the class "
"signature (when used with :rst:dir:`automodule`, this will be inserted for "
"every class that is documented in the module)."
msgstr ""

# 6b2cb0706b234298892f6cadd457454c
#: ../../ext/autodoc.rst:171
msgid ""
"All autodoc directives support the ``noindex`` flag option that has the same"
" effect as for standard :rst:dir:`py:function` etc. directives: no index "
"entries are generated for the documented object (and all autodocumented "
"members)."
msgstr ""

# e35863da759b420f86acbb64aed1c40d
#: ../../ext/autodoc.rst:178
msgid ""
":rst:dir:`automodule` also recognizes the ``synopsis``, ``platform`` and "
"``deprecated`` options that the standard :rst:dir:`py:module` directive "
"supports."
msgstr ""

# 0c25eac7881f490a893a09160e42357b
#: ../../ext/autodoc.rst:184
msgid ""
":rst:dir:`automodule` and :rst:dir:`autoclass` also has an ``member-order`` "
"option that can be used to override the global value of "
":confval:`autodoc_member_order` for one directive."
msgstr ""

# 8ba95e9a45f746a890bf135d25c65503
#: ../../ext/autodoc.rst:190
msgid ""
"The directives supporting member documentation also have a ``exclude-"
"members`` option that can be used to exclude single member names from "
"documentation, if all members are to be documented."
msgstr ""

# c509d2dd880e4bff9b82d2e80465a087
#: ../../ext/autodoc.rst:196
msgid ""
"In an :rst:dir:`automodule` directive with the ``members`` option set, only "
"module members whose ``__module__`` attribute is equal to the module name as"
" given to ``automodule`` will be documented.  This is to prevent "
"documentation of imported classes or functions.  Set the ``imported-"
"members`` option if you want to prevent this behavior and document all "
"available members.  Note that attributes from imported modules will not be "
"documented, because attribute documentation is discovered by parsing the "
"source file of the current module."
msgstr ""

# c8eef8f2280040b5b05198ebc860bf40
#: ../../ext/autodoc.rst:213
msgid ""
"These work exactly like :rst:dir:`autoclass` etc., but do not offer the "
"options used for automatic member documentation."
msgstr ""

# 681c83fe48904b36a44be0e3a9d986f1
#: ../../ext/autodoc.rst:216
msgid ""
":rst:dir:`autodata` and :rst:dir:`autoattribute` support the ``annotation`` "
"option. Without this option, the representation of the object will be shown "
"in the documentation. When the option is given without arguments, only the "
"name of the object will be printed::"
msgstr ""

# 8ac804040c614360a03f7c82f8f3d45a
#: ../../ext/autodoc.rst:226
msgid "You can tell sphinx what should be printed after the name::"
msgstr ""

# 12c6098411ca498a85b8c69f2ab2de8c
#: ../../ext/autodoc.rst:231
msgid ""
"For module data members and class attributes, documentation can either be "
"put into a comment with special formatting (using a ``#:`` to start the "
"comment instead of just ``#``), or in a docstring *after* the definition.  "
"Comments need to be either on a line of their own *before* the definition, "
"or immediately after the assignment *on the same line*.  The latter form is "
"restricted to one line only."
msgstr ""

# 795c144167644741a22603c06beddf5d
#: ../../ext/autodoc.rst:238
msgid ""
"This means that in the following class definition, all attributes can be "
"autodocumented::"
msgstr ""

# 041986bbe45340dd8484d5303fb32a3c
#: ../../ext/autodoc.rst:260
msgid ""
":rst:dir:`autodata` and :rst:dir:`autoattribute` can now extract docstrings."
msgstr ""

# 29579b02b7304df0a98ca8f2f0f21654
#: ../../ext/autodoc.rst:262
msgid "Comment docs are now allowed on the same line after an assignment."
msgstr ""

# 83f77cadccf84b32b4c01c2144fd13e7
#: ../../ext/autodoc.rst:265
msgid ""
":rst:dir:`autodata` and :rst:dir:`autoattribute` have an ``annotation`` "
"option"
msgstr ""

# e1030494b49c43378ff2af68d2fe363b
#: ../../ext/autodoc.rst:271
msgid ""
"If you document decorated functions or methods, keep in mind that autodoc "
"retrieves its docstrings by importing the module and inspecting the "
"``__doc__`` attribute of the given function or method.  That means that if a"
" decorator replaces the decorated function with another, it must copy the "
"original ``__doc__`` to the new function."
msgstr ""

# 5b535dcd78e343fe9bfdbdcee3f67a35
#: ../../ext/autodoc.rst:277
msgid ""
"From Python 2.5, :func:`functools.wraps` can be used to create well-behaved "
"decorating functions."
msgstr ""

# c95987edb63244058377aa19b3806996
#: ../../ext/autodoc.rst:281
msgid "There are also new config values that you can set:"
msgstr ""

# edd1d2262ee6420b9758f05a38fb0775
#: ../../ext/autodoc.rst:285
msgid ""
"This value selects what content will be inserted into the main body of an "
":rst:dir:`autoclass` directive.  The possible values are:"
msgstr ""

# 40f6d5c760624e099761bfbdc5371078
#: ../../ext/autodoc.rst:290
msgid "``\"class\"``"
msgstr ""

# 9a235474df474b55975e2f032381d8fa
#: ../../ext/autodoc.rst:289
msgid ""
"Only the class' docstring is inserted.  This is the default.  You can still "
"document ``__init__`` as a separate method using :rst:dir:`automethod` or "
"the ``members`` option to :rst:dir:`autoclass`."
msgstr ""

# ddbb64e0e6454e8a874300e8f683f5ee
#: ../../ext/autodoc.rst:293
msgid "``\"both\"``"
msgstr ""

# d1276cf344ad4411bc9fc04380406c13
#: ../../ext/autodoc.rst:293
msgid ""
"Both the class' and the ``__init__`` method's docstring are concatenated and"
" inserted."
msgstr ""

# a47d5fc409d14fcd836d7fd2d9a7f211
#: ../../ext/autodoc.rst:296
msgid "``\"init\"``"
msgstr ""

# aaefc046629c4d88b24f7f1230bbafa2
#: ../../ext/autodoc.rst:296
msgid "Only the ``__init__`` method's docstring is inserted."
msgstr ""

# f60097b60a384c71b097930a92658e2b
#: ../../ext/autodoc.rst:302
msgid ""
"This value selects if automatically documented members are sorted "
"alphabetical (value ``'alphabetical'``), by member type (value "
"``'groupwise'``) or by source order (value ``'bysource'``).  The default is "
"alphabetical."
msgstr ""

# a35599c501e44752b0966f4d16a7c788
#: ../../ext/autodoc.rst:307
msgid ""
"Note that for source order, the module must be a Python module with the "
"source code available."
msgstr ""

# 50ae16d0e631448b942796a4afd63277
#: ../../ext/autodoc.rst:311
msgid "Support for ``'bysource'``."
msgstr ""

# ca49194a0b64424c9f76d1254469c06f
#: ../../ext/autodoc.rst:316
msgid ""
"This value is a list of autodoc directive flags that should be automatically"
" applied to all autodoc directives.  The supported flags are ``'members'``, "
"``'undoc-members'``, ``'private-members'``, ``'special-members'``, "
"``'inherited-members'`` and ``'show-inheritance'``."
msgstr ""

# c7147f04267245f091cd727d404457ff
#: ../../ext/autodoc.rst:321
msgid ""
"If you set one of these flags in this config value, you can use a negated "
"form, :samp:`'no-{flag}'`, in an autodoc directive, to disable it once. For "
"example, if ``autodoc_default_flags`` is set to ``['members', 'undoc-"
"members']``, and you write a directive like this::"
msgstr ""

# f13cdc176fde4c11bdbc3a73ab657b14
#: ../../ext/autodoc.rst:329
msgid "the directive will be interpreted as if only ``:members:`` was given."
msgstr ""

# 4392048a8f9644beb0ddca6983fd283f
#: ../../ext/autodoc.rst:335
msgid ""
"Functions imported from C modules cannot be introspected, and therefore the "
"signature for such functions cannot be automatically determined.  However, "
"it is an often-used convention to put the signature into the first line of "
"the function's docstring."
msgstr ""

# 0c0f866b7c954c179f7156d349a2700e
#: ../../ext/autodoc.rst:340
msgid ""
"If this boolean value is set to ``True`` (which is the default), autodoc "
"will look at the first line of the docstring for functions and methods, and "
"if it looks like a signature, use the line as the signature and remove it "
"from the docstring content."
msgstr ""

# d33114d1ef6b48c285413df6c7ccc89d
#: ../../ext/autodoc.rst:349
msgid "Docstring preprocessing"
msgstr ""

# 1d2a2a8e1c1a414c92bbe30d321b780a
#: ../../ext/autodoc.rst:351
msgid "autodoc provides the following additional events:"
msgstr ""

# de661e4fec6347fcbf374dfac809357c
#: ../../ext/autodoc.rst:357
msgid ""
"Emitted when autodoc has read and processed a docstring.  *lines* is a list "
"of strings -- the lines of the processed docstring -- that the event handler"
" can modify **in place** to change what Sphinx puts into the output."
msgstr ""

# 374e8ef7d5bd4e96b6dd19b149c5ed61
# 283068f3fca24593bf0585b7d5a995ed
# 73ebdfed03554bb0992b0f62826706fe
#: ../../ext/autodoc.rst:361 ../../ext/autodoc.rst:381
#: ../../ext/autodoc.rst:418
msgid "the Sphinx application object"
msgstr ""

# 5a27cb8139cf45a7ab1c324509446982
# 572580d5b2fb45018759292032025017
# 6c596ffbc980429ab590d7ac403851f6
#: ../../ext/autodoc.rst:362 ../../ext/autodoc.rst:382
#: ../../ext/autodoc.rst:419
msgid ""
"the type of the object which the docstring belongs to (one of "
"``\"module\"``, ``\"class\"``, ``\"exception\"``, ``\"function\"``, "
"``\"method\"``, ``\"attribute\"``)"
msgstr ""

# 3854b61cb27e4572b7ef85b1fa74ca65
# bb6e74ca66d340399b821a80c9c95bec
# dbac572233e24133a9c86c7486cb1347
#: ../../ext/autodoc.rst:365 ../../ext/autodoc.rst:385
#: ../../ext/autodoc.rst:422
msgid "the fully qualified name of the object"
msgstr ""

# e23ecf3373294ce4b209e2a69c5b6052
# 5ad9c7c2be2b447b917593d5aad054d8
# 25b1d17f45284ffb8ed780a3e4b0e88e
#: ../../ext/autodoc.rst:366 ../../ext/autodoc.rst:386
#: ../../ext/autodoc.rst:423
msgid "the object itself"
msgstr ""

# 0f6b8eafc46f4f8cac88c69bb2da1aa3
# dde40b3bfbed4fad9865d8e122b65c3a
# 42885088b24f4310b262baf48df0627b
#: ../../ext/autodoc.rst:367 ../../ext/autodoc.rst:387
#: ../../ext/autodoc.rst:426
msgid ""
"the options given to the directive: an object with attributes "
"``inherited_members``, ``undoc_members``, ``show_inheritance`` and "
"``noindex`` that are true if the flag option of same name was given to the "
"auto directive"
msgstr ""

# 5298114c4dfc4a2e93d963ce4f7c4215
#: ../../ext/autodoc.rst:371
msgid "the lines of the docstring, see above"
msgstr ""

# 44d84ad8fd1a418bac74042b38f66bc8
#: ../../ext/autodoc.rst:377
msgid ""
"Emitted when autodoc has formatted a signature for an object. The event "
"handler can return a new tuple ``(signature, return_annotation)`` to change "
"what Sphinx puts into the output."
msgstr ""

# 8b89807b065f401f8265720bade58745
#: ../../ext/autodoc.rst:391
msgid ""
"function signature, as a string of the form ``\"(parameter_1, "
"parameter_2)\"``, or ``None`` if introspection didn't succeed and signature "
"wasn't specified in the directive."
msgstr ""

# 1b4e409d5770494bb9c59af291f74be3
#: ../../ext/autodoc.rst:394
msgid ""
"function return annotation as a string of the form ``\" -> annotation\"``, "
"or ``None`` if there is no return annotation"
msgstr ""

# 5e03490d783f403b80a95e825d2c61ad
#: ../../ext/autodoc.rst:397
msgid ""
"The :mod:`sphinx.ext.autodoc` module provides factory functions for commonly"
" needed docstring processing in event :event:`autodoc-process-docstring`:"
msgstr ""

# aa79ab267d3c4bb3be31dc18422781dd
#: ../../../sphinx/ext/autodoc.pydocstring of sphinx.ext.autodoc.cut_lines:1
msgid ""
"Return a listener that removes the first *pre* and last *post* lines of "
"every docstring.  If *what* is a sequence of strings, only docstrings of a "
"type in *what* will be processed."
msgstr ""

# 3994eca8341d468284a70057cf77c165
#: ../../../sphinx/ext/autodoc.pydocstring of sphinx.ext.autodoc.cut_lines:5
msgid "Use like this (e.g. in the ``setup()`` function of :file:`conf.py`)::"
msgstr ""

# efe56f481c9f4a37807cf2bfed0273ad
#: ../../../sphinx/ext/autodoc.pydocstring of sphinx.ext.autodoc.cut_lines:10
msgid ""
"This can (and should) be used in place of :confval:`automodule_skip_lines`."
msgstr ""

# 0b4d803a24ac47ab87bdb3f7a93be0ec
#: ../../../sphinx/ext/autodoc.pydocstring of sphinx.ext.autodoc.between:1
msgid ""
"Return a listener that either keeps, or if *exclude* is True excludes, lines"
" between lines that match the *marker* regular expression.  If no line "
"matches, the resulting docstring would be empty, so no change will be made "
"unless *keepempty* is true."
msgstr ""

# 8acfcf2ad08a42b480ed3e27af90ad22
#: ../../../sphinx/ext/autodoc.pydocstring of sphinx.ext.autodoc.between:6
msgid ""
"If *what* is a sequence of strings, only docstrings of a type in *what* will"
" be processed."
msgstr ""

# cc3a37f83df94ef8bac77a3a9cb08d3c
#: ../../ext/autodoc.rst:405
msgid "Skipping members"
msgstr ""

# d44e875c5299486f909eded24bcef1ce
#: ../../ext/autodoc.rst:407
msgid ""
"autodoc allows the user to define a custom method for determining whether a "
"member should be included in the documentation by using the following event:"
msgstr ""

# 3ce5d051e6484631b0415bd22365de97
#: ../../ext/autodoc.rst:414
msgid ""
"Emitted when autodoc has to decide whether a member should be included in "
"the documentation.  The member is excluded if a handler returns ``True``.  "
"It is included if the handler returns ``False``."
msgstr ""

# 3daf9f0de8d244918a731757c9a5ae96
#: ../../ext/autodoc.rst:424
msgid ""
"a boolean indicating if autodoc will skip this member if the user handler "
"does not override the decision"
msgstr ""

# 88e2404ba2414d93b155a0e7f61d3146
#: ../../ext/autodoc.rst:9
msgid "automatic"
msgstr ""

# 88e2404ba2414d93b155a0e7f61d3146
#: ../../ext/autodoc.rst:9
msgid "documentation"
msgstr ""

# 88e2404ba2414d93b155a0e7f61d3146
#: ../../ext/autodoc.rst:9
msgid "docstring"
msgstr ""
