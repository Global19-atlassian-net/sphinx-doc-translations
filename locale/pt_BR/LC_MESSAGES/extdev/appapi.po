# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2015, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: sphinx-doc-1.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-11 04:27+0000\n"
"PO-Revision-Date: 2014-07-13 04:48+0000\n"
"Last-Translator: Takayuki Shimizukawa <shimizukawa@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/sphinx-doc/sphinx-doc-1_2_0/language/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# 4c1804cf142841dbbf1e7bd78ff3932a
#: ../../extdev/appapi.rst:4
msgid "Application API"
msgstr ""

# 295adb8eab4046b6b491d02fe5b63d54
#: ../../extdev/appapi.rst:10
msgid ""
"Each Sphinx extension is a Python module with at least a :func:`setup` "
"function. This function is called at initialization time with one argument, "
"the application object representing the Sphinx process."
msgstr ""

# e6537ae7ce7f4ce0aeeec874da7e785d
#: ../../extdev/appapi.rst:16
msgid "This application object has the public API described in the following."
msgstr ""

# 43fc611c418547d2941d23bdd5439798
#: ../../extdev/appapi.rst:19
msgid "Extension setup"
msgstr ""

# 705a5b3841054739ac5eb04a33952c3b
#: ../../extdev/appapi.rst:21
msgid ""
"These methods are usually called in an extension's ``setup()`` function."
msgstr ""

# 7d62751affc3414ab8575d013cc86324
#: ../../extdev/appapi.rst:23
msgid ""
"Examples of using the Sphinx extension API can be seen in the "
":mod:`sphinx.ext` package."
msgstr ""

# 5b1c3a0f3210419fb2748a2200daeb74
#: ../../extdev/appapi.rst:28
msgid ""
"Load the extension given by the module *name*.  Use this if your extension "
"needs the features provided by another extension."
msgstr ""

# f89d124c236b442ca70ce2659667c376
#: ../../extdev/appapi.rst:33
msgid ""
"Register a new builder.  *builder* must be a class that inherits from "
":class:`~sphinx.builders.Builder`."
msgstr ""

# 62e9e5416c734c1bac0182923c821eb7
#: ../../extdev/appapi.rst:38
msgid ""
"Register a configuration value.  This is necessary for Sphinx to recognize "
"new values and set default values accordingly.  The *name* should be "
"prefixed with the extension name, to avoid clashes.  The *default* value can"
" be any Python object.  The string value *rebuild* must be one of those "
"values:"
msgstr ""

# 3b46c60fc9b941ec97e058820bd166f9
#: ../../extdev/appapi.rst:43
msgid ""
"``'env'`` if a change in the setting only takes effect when a document is "
"parsed -- this means that the whole environment must be rebuilt."
msgstr ""

# 5e544c1f169a4194b81477bcf3db5415
#: ../../extdev/appapi.rst:45
msgid ""
"``'html'`` if a change in the setting needs a full rebuild of HTML "
"documents."
msgstr ""

# e5249c0be2ed4d4db4fe9583adeabaa2
#: ../../extdev/appapi.rst:47
msgid "``''`` if a change in the setting will not need any special rebuild."
msgstr ""

# 3ff8d1dfce8343049e33fa7bf6003fb0
#: ../../extdev/appapi.rst:49
msgid ""
"If the *default* value is a callable, it will be called with the config "
"object as its argument in order to get the default value.  This can be used "
"to implement config values whose default depends on other values."
msgstr ""

# 698c4602d72746dda2927e656c6c8b36
#: ../../extdev/appapi.rst:54
msgid ""
"Changed *rebuild* from a simple boolean (equivalent to ``''`` or ``'env'``) "
"to a string.  However, booleans are still accepted and converted internally."
msgstr ""

# 457a86974944452b8053036dae441854
#: ../../extdev/appapi.rst:61
msgid ""
"Make the given *domain* (which must be a class; more precisely, a subclass "
"of :class:`~sphinx.domains.Domain`) known to Sphinx."
msgstr ""

# 3b32da6b4517405bb965c0b19f28eea6
#: ../../extdev/appapi.rst:68
msgid ""
"Make the given *domain* class known to Sphinx, assuming that there is "
"already a domain with its ``.name``.  The new domain must be a subclass of "
"the existing one."
msgstr ""

# d44860bf6b2c4847830cf16c5fcc48a0
#: ../../extdev/appapi.rst:76
msgid ""
"Add a custom *index* class to the domain named *domain*.  *index* must be a "
"subclass of :class:`~sphinx.domains.Index`."
msgstr ""

# 4eaef8e7535b41009dc62ff03c0e5fba
#: ../../extdev/appapi.rst:83
msgid ""
"Register an event called *name*.  This is needed to be able to emit it."
msgstr ""

# 35e3187b5e5148998d5a72deb91e4b18
#: ../../extdev/appapi.rst:87
msgid ""
"Register a Docutils node class.  This is necessary for Docutils internals. "
"It may also be used in the future to validate nodes in the parsed documents."
msgstr ""

# 654886096d6e4e8f97a18d19eef770c8
#: ../../extdev/appapi.rst:90
msgid ""
"Node visitor functions for the Sphinx HTML, LaTeX, text and manpage writers "
"can be given as keyword arguments: the keyword must be one or more of "
"``'html'``, ``'latex'``, ``'text'``, ``'man'``, ``'texinfo'``, the value a "
"2-tuple of ``(visit, depart)`` methods.  ``depart`` can be ``None`` if the "
"``visit`` function raises :exc:`docutils.nodes.SkipNode`.  Example:"
msgstr ""

# 85135c24466a45779d49f4fd81c711db
#: ../../extdev/appapi.rst:107
msgid ""
"Obviously, translators for which you don't specify visitor methods will "
"choke on the node when encountered in a document to translate."
msgstr ""

# 63354db6c0b1486c979be8eebfeff055
#: ../../extdev/appapi.rst:110
msgid "Added the support for keyword arguments giving visit functions."
msgstr ""

# a9089090cc1343c09e735140e6d107a9
#: ../../extdev/appapi.rst:116
msgid ""
"Register a Docutils directive.  *name* must be the prospective directive "
"name.  There are two possible ways to write a directive:"
msgstr ""

# 8da74db6751b457a8d482be55ebc32e3
#: ../../extdev/appapi.rst:119
msgid ""
"In the docutils 0.4 style, *obj* is the directive function.  *content*, "
"*arguments* and *options* are set as attributes on the function and "
"determine whether the directive has content, arguments and options, "
"respectively.  **This style is deprecated.**"
msgstr ""

# 0c905a7cfc5c4f55a5bb1096f56d22de
#: ../../extdev/appapi.rst:124
msgid ""
"In the docutils 0.5 style, *directiveclass* is the directive class.  It must"
" already have attributes named *has_content*, *required_arguments*, "
"*optional_arguments*, *final_argument_whitespace* and *option_spec* that "
"correspond to the options for the function way.  See `the Docutils docs "
"<http://docutils.sourceforge.net/docs/howto/rst-directives.html>`_ for "
"details."
msgstr ""

# 68f87031fbc64a3d972d4dcb5fd2fcff
#: ../../extdev/appapi.rst:131
msgid ""
"The directive class must inherit from the class "
"``docutils.parsers.rst.Directive``."
msgstr ""

# ecc6ab282aaa4be8b589d2d5aeba9d74
#: ../../extdev/appapi.rst:134
msgid ""
"For example, the (already existing) :rst:dir:`literalinclude` directive "
"would be added like this:"
msgstr ""

# d9763732c3f14a3382091249c0daa93a
#: ../../extdev/appapi.rst:146
msgid "Docutils 0.5-style directive classes are now supported."
msgstr ""

# ca1f7ecc422244e79eb49e1f32af5ba5
#: ../../extdev/appapi.rst:152
msgid ""
"Like :meth:`add_directive`, but the directive is added to the domain named "
"*domain*."
msgstr ""

# 35dda8f936824476bb68dacf20a7e893
#: ../../extdev/appapi.rst:159
msgid ""
"Register a Docutils role.  *name* must be the role name that occurs in the "
"source, *role* the role function (see the `Docutils documentation "
"<http://docutils.sourceforge.net/docs/howto/rst-roles.html>`_ on details)."
msgstr ""

# 70eb770fa01d4e39abe301601a2428e5
#: ../../extdev/appapi.rst:165
msgid ""
"Like :meth:`add_role`, but the role is added to the domain named *domain*."
msgstr ""

# 3f80c2c60e5249518343fb2ef1a23a43
#: ../../extdev/appapi.rst:171
msgid ""
"Register a Docutils role that does nothing but wrap its contents in the node"
" given by *nodeclass*."
msgstr ""

# 5e392adb2e6243dc811b6791d138961e
#: ../../extdev/appapi.rst:179
msgid ""
"This method is a very convenient way to add a new :term:`object` type that "
"can be cross-referenced.  It will do this:"
msgstr ""

# a201006e3db541b989d3c51647414f75
#: ../../extdev/appapi.rst:182
msgid ""
"Create a new directive (called *directivename*) for documenting an object. "
"It will automatically add index entries if *indextemplate* is nonempty; if "
"given, it must contain exactly one instance of ``%s``.  See the example "
"below for how the template will be interpreted."
msgstr ""

# cdf430bdb2d04c1c9cf750cc66fd11a8
#: ../../extdev/appapi.rst:186
msgid ""
"Create a new role (called *rolename*) to cross-reference to these object "
"descriptions."
msgstr ""

# aa40294a4b934eb99e30b1e95bed39f4
#: ../../extdev/appapi.rst:188
msgid ""
"If you provide *parse_node*, it must be a function that takes a string and a"
" docutils node, and it must populate the node with children parsed from the "
"string.  It must then return the name of the item to be used in cross-"
"referencing and index entries.  See the :file:`conf.py` file in the source "
"for this documentation for an example."
msgstr ""

# 97f03ce6931e452b9fd260f9774f209d
#: ../../extdev/appapi.rst:193
msgid ""
"The *objname* (if not given, will default to *directivename*) names the type"
" of object.  It is used when listing objects, e.g. in search results."
msgstr ""

# 0c5a433da8d047ffb50fb8576e48a78b
#: ../../extdev/appapi.rst:196
msgid "For example, if you have this call in a custom Sphinx extension::"
msgstr ""

# b5053d0856df47fea92c06a1f1ed49d7
#: ../../extdev/appapi.rst:200
msgid "you can use this markup in your documents::"
msgstr ""

# 5185a01a623642ba9bec91c0d694f66f
#: ../../extdev/appapi.rst:210
msgid ""
"For the directive, an index entry will be generated as if you had prepended "
"::"
msgstr ""

# d30ab3bb3469468aadd2ffb4325199cd
#: ../../extdev/appapi.rst:214
msgid ""
"The reference node will be of class ``literal`` (so it will be rendered in a"
" proportional font, as appropriate for code) unless you give the "
"*ref_nodeclass* argument, which must be a docutils node class (most useful "
"are ``docutils.nodes.emphasis`` or ``docutils.nodes.strong`` -- you can also"
" use ``docutils.nodes.generated`` if you want no further text decoration)."
msgstr ""

# 6abdd49240ad4bdba4680ed4ae4c3255
#: ../../extdev/appapi.rst:220
msgid ""
"For the role content, you have the same syntactical possibilities as for "
"standard Sphinx roles (see :ref:`xref-syntax`)."
msgstr ""

# 588b743bbd29461e92ddb1fd2db5206d
#: ../../extdev/appapi.rst:223
msgid ""
"This method is also available under the deprecated alias "
"``add_description_unit``."
msgstr ""

# 9239fdd99009461382421f3b02c5c0c3
#: ../../extdev/appapi.rst:228
msgid ""
"This method is very similar to :meth:`add_object_type` except that the "
"directive it generates must be empty, and will produce no output."
msgstr ""

# 4b038eaa377b4e7c8e8214e779ec50da
#: ../../extdev/appapi.rst:231
msgid ""
"That means that you can add semantic targets to your sources, and refer to "
"them using custom roles instead of generic ones (like :rst:role:`ref`).  "
"Example call::"
msgstr ""

# ab9666f5877f4384860f43634db9a411
#: ../../extdev/appapi.rst:237
msgid "Example usage::"
msgstr ""

# f166e311eec045b18ba13cd1eb366de1
#: ../../extdev/appapi.rst:248
msgid ""
"(Of course, the element following the ``topic`` directive needn't be a "
"section.)"
msgstr ""

# 7289a21f5b444166906553b0ac7a3ef6
#: ../../extdev/appapi.rst:253
msgid ""
"Add the standard docutils :class:`Transform` subclass *transform* to the "
"list of transforms that are applied after Sphinx parses a reST document."
msgstr ""

# 4a3fb11c955348beabe6860c525d1c4f
#: ../../extdev/appapi.rst:258
msgid ""
"Add *filename* to the list of JavaScript files that the default HTML "
"template will include.  The filename must be relative to the HTML static "
"path, see :confval:`the docs for the config value <html_static_path>`.  A "
"full URI with scheme, like ``http://example.org/foo.js``, is also supported."
msgstr ""

# 75d9ae82fbb7400d8e6c74fbfd3405a6
#: ../../extdev/appapi.rst:267
msgid ""
"Add *filename* to the list of CSS files that the default HTML template will "
"include.  Like for :meth:`add_javascript`, the filename must be relative to "
"the HTML static path, or a full URI with scheme."
msgstr ""

# 79fa85cfe9a042928146014b238812d8
#: ../../extdev/appapi.rst:275
msgid ""
"Use *lexer*, which must be an instance of a Pygments lexer class, to "
"highlight code blocks with the given language *alias*."
msgstr ""

# 384cab660e4546b2b99ba53d1fccd99e
#: ../../extdev/appapi.rst:282
msgid ""
"Add *cls* as a new documenter class for the :mod:`sphinx.ext.autodoc` "
"extension.  It must be a subclass of :class:`sphinx.ext.autodoc.Documenter`."
" This allows to auto-document new types of objects.  See the source of the "
"autodoc module for examples on how to subclass :class:`Documenter`."
msgstr ""

# 1e230bc2a3ca40e5925872f38521e293
#: ../../extdev/appapi.rst:293
msgid ""
"Add *getter*, which must be a function with an interface compatible to the "
":func:`getattr` builtin, as the autodoc attribute getter for objects that "
"are instances of *type*.  All cases where autodoc needs to get an attribute "
"of a type are then handled by this function instead of :func:`getattr`."
msgstr ""

# e3e45d258e5a449ba38aeac6309c5109
#: ../../extdev/appapi.rst:302
msgid ""
"Add *cls*, which must be a subclass of "
":class:`sphinx.search.SearchLanguage`, as a support language for building "
"the HTML full-text search index.  The class must have a *lang* attribute "
"that indicates the language it should be used for.  See "
":confval:`html_search_language`."
msgstr ""

# 8ab26828cf54493b9e17c5e4bfec14ef
#: ../../extdev/appapi.rst:311
msgid ""
"Compare *version* (which must be a ``major.minor`` version string, e.g. "
"``'1.1'``) with the version of the running Sphinx, and abort the build when "
"it is too old."
msgstr ""

# 89a8149773fd4a82ad9001dfa54826d6
#: ../../extdev/appapi.rst:319
msgid ""
"Register *callback* to be called when *event* is emitted.  For details on "
"available core events and the arguments of callback functions, please see "
":ref:`events`."
msgstr ""

# de12767bb13c424ca38dc706b968ad7a
#: ../../extdev/appapi.rst:323
msgid ""
"The method returns a \"listener ID\" that can be used as an argument to "
":meth:`disconnect`."
msgstr ""

# ddcec2f7ad784e60b4421bc8d9896857
#: ../../extdev/appapi.rst:328
msgid "Unregister callback *listener_id*."
msgstr ""

# a0df091326d04c8b9e069f8703f6c9cc
#: ../../extdev/appapi.rst:333
msgid ""
"All these methods raise this exception if something went wrong with the "
"extension API."
msgstr ""

# 003a43923f3a449a9fa91cfeb65a692e
#: ../../extdev/appapi.rst:338
msgid "Emitting events"
msgstr ""

# 8cd63e4a76c34cfc858b00e855a5af96
#: ../../extdev/appapi.rst:342
msgid ""
"Emit *event* and pass *arguments* to the callback functions.  Return the "
"return values of all callbacks as a list.  Do not emit core Sphinx events in"
" extensions!"
msgstr ""

# 6dea3f6742e9424fbdf19c3e0d0bba3b
#: ../../extdev/appapi.rst:348
msgid ""
"Emit *event* and pass *arguments* to the callback functions.  Return the "
"result of the first callback that doesn't return ``None``."
msgstr ""

# 8834b337b11f4c69890320c4b13c58ca
#: ../../extdev/appapi.rst:355
msgid "Producing messages / logging"
msgstr ""

# 192536c6d148476cb7194766f1f921dc
#: ../../extdev/appapi.rst:357
msgid ""
"The application object also provides support for emitting leveled messages."
msgstr ""

# 6d3797acc86f4b179ed62f02dbe5d1b4
#: ../../extdev/appapi.rst:361
msgid ""
"There is no \"error\" call: in Sphinx, errors are defined as things that "
"stop the build; just raise an exception (:exc:`sphinx.errors.SphinxError` or"
" a custom subclass) to do that."
msgstr ""

# 9710f060f7634398ad17f4dff8041abd
#: ../../../sphinx/application.pydocstring of sphinx.application.Sphinx.warn:1
msgid "Emit a warning."
msgstr ""

# 9e5e6c218de74b1480d6d64d007809ce
#: ../../../sphinx/application.pydocstring of sphinx.application.Sphinx.warn:3
msgid ""
"If *location* is given, it should either be a tuple of (docname, lineno) or "
"a string describing the location of the warning as well as possible."
msgstr ""

# a8519e3142c24eb6a2ed129f509d4fc1
#: ../../../sphinx/application.pydocstring of sphinx.application.Sphinx.warn:6
msgid "*prefix* usually should not be changed."
msgstr ""

# f4b4408573824f7fabb30adc2b492f08
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.Sphinx.warn:10
msgid ""
"For warnings emitted during parsing, you should use "
":meth:`.BuildEnvironment.warn` since that will collect all warnings during "
"parsing for later output."
msgstr ""

# d344e70b673440d4b353ae044b468adc
#: ../../../sphinx/application.pydocstring of sphinx.application.Sphinx.info:1
msgid "Emit an informational message."
msgstr ""

# 89009fe8bdd24516a72f2f5be6adda49
#: ../../../sphinx/application.pydocstring of sphinx.application.Sphinx.info:3
msgid ""
"If *nonl* is true, don't emit a newline at the end (which implies that more "
"info output will follow soon.)"
msgstr ""

# fc6debba447a4ac19a95538f32031eac
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.Sphinx.verbose:1
msgid "Emit a verbose informational message."
msgstr ""

# 07d4c03743d848e494bdcd6d10921407
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.Sphinx.verbose:3
msgid ""
"The message will only be emitted for verbosity levels >= 1 (i.e. at least "
"one ``-v`` option was given)."
msgstr ""

# 6b761e62a69c4e14976df9a373bf95d3
# cac862adc13a43339d913d2b2e012648
# da36b9e0c81f47f0a8f50dc421649071
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.Sphinx.verbose:6 ../../../sphinx/application.pydocstring
#: of sphinx.application.Sphinx.debug:6
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.Sphinx.debug2:6
msgid ""
"The message can contain %-style interpolation placeholders, which is "
"formatted with either the ``*args`` or ``**kwargs`` when output."
msgstr ""

# c6938d118c194f0d90d1295632100c4b
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.Sphinx.debug:1
msgid "Emit a debug-level informational message."
msgstr ""

# 817d7d790d7a44bc9bcf26200534d6e1
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.Sphinx.debug:3
msgid ""
"The message will only be emitted for verbosity levels >= 2 (i.e. at least "
"two ``-v`` options were given)."
msgstr ""

# d1f4190e0a7f4d0eb5c46f6289e005bf
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.Sphinx.debug2:1
msgid "Emit a lowlevel debug-level informational message."
msgstr ""

# d72ea453995b4d21adc409855dc58b57
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.Sphinx.debug2:3
msgid ""
"The message will only be emitted for verbosity level 3 (i.e. three ``-v`` "
"options were given)."
msgstr ""

# c9661dfa2cbb419c9f28aa3469900fd2
#: ../../extdev/appapi.rst:379
msgid "Sphinx core events"
msgstr ""

# 15d8538e3aaa4ca2887bce2fbf996b77
#: ../../extdev/appapi.rst:381
msgid ""
"These events are known to the core.  The arguments shown are given to the "
"registered event handlers.  Use :meth:`.connect` in an extension's ``setup``"
" function (note that ``conf.py`` can also have a ``setup`` function) to "
"connect handlers to the events.  Example:"
msgstr ""

# 1908514b6a444d97bfc09c3f98f9842d
#: ../../extdev/appapi.rst:397
msgid ""
"Emitted when the builder object has been created.  It is available as "
"``app.builder``."
msgstr ""

# 2e7128dc8cef4dfab5eb85dfba51eee5
#: ../../extdev/appapi.rst:402
msgid ""
"Emitted when the environment determines which source files have changed and "
"should be re-read.  *added*, *changed* and *removed* are sets of docnames "
"that the environment has determined.  You can return a list of docnames to "
"re-read in addition to these."
msgstr ""

# 0c02217e7ce541229ca90b6ec2409d6c
#: ../../extdev/appapi.rst:411
msgid ""
"Emitted when all traces of a source file should be cleaned from the "
"environment, that is, if the source file is removed or before it is freshly "
"read.  This is for extensions that keep their own caches in attributes of "
"the environment."
msgstr ""

# a1f8158df1894410abc418520de58789
#: ../../extdev/appapi.rst:416
msgid ""
"For example, there is a cache of all modules on the environment.  When a "
"source file has been changed, the cache's entries for the file are cleared, "
"since the module declarations could have been removed from the file."
msgstr ""

# 3d7cd47fd48248af83061e98fe725707
#: ../../extdev/appapi.rst:424
msgid ""
"Emitted when a source file has been read.  The *source* argument is a list "
"whose single element is the contents of the source file.  You can process "
"the contents and replace this item to implement source-level "
"transformations."
msgstr ""

# 06c47439dd4f40d3bd0a1f4aaef4d463
#: ../../extdev/appapi.rst:428
msgid ""
"For example, if you want to use ``$`` signs to delimit inline math, like in "
"LaTeX, you can use a regular expression to replace ``$...$`` by "
"``:math:`...```."
msgstr ""

# 5425234a35f841db85d4ad27f13ffdea
#: ../../extdev/appapi.rst:436
msgid ""
"Emitted when a doctree has been parsed and read by the environment, and is "
"about to be pickled.  The *doctree* can be modified in-place."
msgstr ""

# aae9a8b0eeae46c68828f3f74c653765
#: ../../extdev/appapi.rst:441
msgid ""
"Emitted when a cross-reference to a Python module or object cannot be "
"resolved.  If the event handler can resolve the reference, it should return "
"a new docutils node to be inserted in the document tree in place of the node"
" *node*.  Usually this node is a :class:`reference` node containing "
"*contnode* as a child."
msgstr ""

# 117df7dd8a754a9e9117c3a65d5745e5
#: ../../extdev/appapi.rst:447
msgid "The build environment (``app.builder.env``)."
msgstr ""

# 025029e61110416f828fb7db4e1c12e7
#: ../../extdev/appapi.rst:448
msgid ""
"The :class:`pending_xref` node to be resolved.  Its attributes ``reftype``, "
"``reftarget``, ``modname`` and ``classname`` attributes determine the type "
"and target of the reference."
msgstr ""

# 730db37ebd474acba6432946bdf523eb
#: ../../extdev/appapi.rst:451
msgid ""
"The node that carries the text and formatting inside the future reference "
"and should be a child of the returned reference node."
msgstr ""

# 166911f9de074eb39905759d5c6ac3bb
#: ../../extdev/appapi.rst:458
msgid ""
"Emitted when a doctree has been \"resolved\" by the environment, that is, "
"all references have been resolved and TOCs have been inserted.  The "
"*doctree* can be modified in place."
msgstr ""

# 3aea924df6e04ef7b639781737988c68
#: ../../extdev/appapi.rst:462
msgid ""
"Here is the place to replace custom nodes that don't have visitor methods in"
" the writers, so that they don't cause errors when the writers encounter "
"them."
msgstr ""

# 013df4ed74d34f909416598711bcdad7
#: ../../extdev/appapi.rst:467
msgid ""
"Emitted when the :meth:`update` method of the build environment has "
"completed, that is, the environment and all doctrees are now up-to-date."
msgstr ""

# ba7f552833b04fcebac81214ce7559f6
#: ../../extdev/appapi.rst:474
msgid ""
"Emitted when the HTML builder is starting to write non-document pages.  You "
"can add pages to write by returning an iterable from this event consisting "
"of ``(pagename, context, templatename)``."
msgstr ""

# dde6b030e5104b89b1ec5a11c3696d73
#: ../../extdev/appapi.rst:482
msgid ""
"Emitted when the HTML builder has created a context dictionary to render a "
"template with -- this can be used to add custom elements to the context."
msgstr ""

# 7a22f80f434543eb88d55d4141480b50
#: ../../extdev/appapi.rst:485
msgid ""
"The *pagename* argument is the canonical name of the page being rendered, "
"that is, without ``.html`` suffix and using slashes as path separators.  The"
" *templatename* is the name of the template to render, this will be "
"``'page.html'`` for all pages from reST documents."
msgstr ""

# 07296bf3acd649bb8c794147032f5ffa
#: ../../extdev/appapi.rst:490
msgid ""
"The *context* argument is a dictionary of values that are given to the "
"template engine to render the page and can be modified to include custom "
"values.  Keys must be strings."
msgstr ""

# 0622fbd4dcb4476b82ea59a049fab27b
#: ../../extdev/appapi.rst:494
msgid ""
"The *doctree* argument will be a doctree when the page is created from a "
"reST documents; it will be ``None`` when the page is created from an HTML "
"template alone."
msgstr ""

# 9ebe1e51985141dc8c95f47218aaa62b
#: ../../extdev/appapi.rst:502
msgid ""
"Emitted when a build has finished, before Sphinx exits, usually used for "
"cleanup.  This event is emitted even when the build process raised an "
"exception, given as the *exception* argument.  The exception is reraised in "
"the application after the event handlers have run.  If the build process "
"raised no exception, *exception* will be ``None``.  This allows to customize"
" cleanup actions depending on the exception status."
msgstr ""

# 86285047218c4b19b25e8cb55b969cc3
#: ../../extdev/appapi.rst:513
msgid "Checking the Sphinx version"
msgstr ""

# 89658b6f38574961a53e334de6d57025
#: ../../extdev/appapi.rst:517
msgid "Use this to adapt your extension to API changes in Sphinx."
msgstr ""

# 6a684464c7c948c18a93790a860e621d
#: ../../extdev/appapi.rst:521
msgid ""
"A tuple of five elements; for Sphinx version 1.2.1 beta 3 this would be "
"``(1, 2, 1, 'beta', 3)``."
msgstr ""

# abb61aba5b9c43479dc877f6e8e50d5c
#: ../../extdev/appapi.rst:524
msgid "Before version 1.2, check the string ``sphinx.__version__``."
msgstr ""

# 1cb3e20d3aea42ffba6f843136790905
#: ../../extdev/appapi.rst:529
msgid "The Config object"
msgstr ""

# 19310fd6d0564ff69e7d5734f2a2e6f7
#: ../../extdev/appapi.rst:535
msgid ""
"The config object makes the values of all config values available as "
"attributes."
msgstr ""

# 62dd588fd3154b64b584c791d42b72b7
#: ../../extdev/appapi.rst:538
msgid ""
"It is available as the ``config`` attribute on the application and "
"environment objects.  For example, to get the value of :confval:`language`, "
"use either ``app.config.language`` or ``env.config.language``."
msgstr ""

# 47da6327686845faaf71a36aae7a2840
#: ../../extdev/appapi.rst:546
msgid "The template bridge"
msgstr ""

# 78ec7f40d7774d0e97e67b763783efb3
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.TemplateBridge:1
msgid ""
"This class defines the interface for a \"template bridge\", that is, a class"
" that renders templates given a template name and a context."
msgstr ""

# 01a1f2b905034b65b1e32f4cfb9ff6f3
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.TemplateBridge.init:1
msgid "Called by the builder to initialize the template system."
msgstr ""

# 0bb9e4cb4dc042e98becf02290bcca96
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.TemplateBridge.init:3
msgid ""
"*builder* is the builder object; you'll probably want to look at the value "
"of ``builder.config.templates_path``."
msgstr ""

# cf81c2c7a3874b9f994b263ffc4f713a
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.TemplateBridge.init:6
msgid ""
"*theme* is a :class:`sphinx.theming.Theme` object or None; in the latter "
"case, *dirs* can be list of fixed directories to look for templates."
msgstr ""

# 433c48a0a16d49febbdbac3e38e79eb7
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.TemplateBridge.newest_template_mtime:1
msgid ""
"Called by the builder to determine if output files are outdated because of "
"template changes.  Return the mtime of the newest template file that was "
"changed.  The default implementation returns ``0``."
msgstr ""

# 4c417a6efb3744ed8da071e438221fed
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.TemplateBridge.render:1
msgid ""
"Called by the builder to render a template given as a filename with a "
"specified context (a Python dictionary)."
msgstr ""

# 8785d47b2caa4537bf1da8f8ec80f9c3
#: ../../../sphinx/application.pydocstring of
#: sphinx.application.TemplateBridge.render_string:1
msgid ""
"Called by the builder to render a template given as a string with a "
"specified context (a Python dictionary)."
msgstr ""

# d9f7b38d688d4cd080b3e9432e1ae11a
#: ../../extdev/appapi.rst:557
msgid "Exceptions"
msgstr ""

# 9cd38c0e65b64fbb914e5379fe06c013
#: ../../extdev/appapi.rst:563
msgid ""
"This is the base class for \"nice\" exceptions.  When such an exception is "
"raised, Sphinx will abort the build and present the exception category and "
"message to the user."
msgstr ""

# 532405d1655149e395ff85009041f5c8
#: ../../extdev/appapi.rst:567
msgid ""
"Extensions are encouraged to derive from this exception for their custom "
"errors."
msgstr ""

# f1f648c4c12b4d0fac7d6e091847db42
#: ../../extdev/appapi.rst:570
msgid ""
"Exceptions *not* derived from :exc:`SphinxError` are treated as unexpected "
"and shown to the user with a part of the traceback (and the full traceback "
"saved in a temporary file)."
msgstr ""

# 0404ecacd6be405d8203fc5cf17a089b
#: ../../extdev/appapi.rst:576
msgid ""
"Description of the exception \"category\", used in converting the exception "
"to a string (\"category: message\").  Should be set accordingly in "
"subclasses."
msgstr ""

# fbb2de892d324f18b57a45a84a33391b
#: ../../extdev/appapi.rst:582
msgid ""
"Used for erroneous values or nonsensical combinations of configuration "
"values."
msgstr ""

# ec9f2a9eece24faa8b6e480369046801
#: ../../extdev/appapi.rst:587
msgid "Used for errors in setting up extensions."
msgstr ""

# 5d3b9246768d40f5a3a5e1c33af25798
#: ../../extdev/appapi.rst:591
msgid "Used for errors to do with themes."
msgstr ""

# ab97d7f2942e4d98bc923ff5eab6d5f3
#: ../../extdev/appapi.rst:595
msgid ""
"Raised when the docs require a higher Sphinx version than the current one."
msgstr ""
